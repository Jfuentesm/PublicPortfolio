<issue to address>
<description>
2 issues with the job stats:
1) there are N/A
2) this is not adapted to the fact that each job can have a different max depth level selected by the user

</description>

<Processing Statistics>
Vendors Processed:N/A
Unique Vendors:3
Successfully Classified (L5):0
Search Assisted (L5):N/A
Ref: Classified (L4):0
Invalid Category Errors:0
LLM API Calls:N/A
LLM Tokens Used:N/A
Search API Calls:N/A
Processing Time:N/A
</Processing Statistics>
<browser console>
JobStats: Mounted with initial jobId: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b
index-BjpwIDEQ.js:26 JobStats: Fetching stats for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b
index-BjpwIDEQ.js:26 JobStats: Received stats: 
{job_id: 'ea2e0b3a-e893-4f5e-9930-4ce4f843d95b', company_name: 'test_client', target_level: 2, start_time: '2025-04-07T05:42:44.180539', end_time: '2025-04-07T05:43:27.549173', …}
api_usage: {openrouter_calls: 7, openrouter_prompt_tokens: 9743, openrouter_completion_tokens: 1267, openrouter_total_tokens: 11010, tavily_search_calls: 2, …}
classification_not_possible_initial: 2
company_name: "test_client"
end_time: "2025-04-07T05:43:27.549173"
invalid_category_errors: 0
job_id: "ea2e0b3a-e893-4f5e-9930-4ce4f843d95b"
processing_duration_seconds: 43.37
search_attempts: 2
search_successful_classifications_l1: 2
search_successful_classifications_l5: 0
start_time: "2025-04-07T05:42:44.180539"
successfully_classified_l4: 0
successfully_classified_l5: 0
target_level: 2
total_vendors: 3
unique_vendors: 3
[[Prototype]]: Object
constructor: ƒ Object()
hasOwnProperty: ƒ hasOwnProperty()
isPrototypeOf: ƒ isPrototypeOf()
propertyIsEnumerable: ƒ propertyIsEnumerable()
toLocaleString: ƒ toLocaleString()
toString: ƒ toString()
valueOf: ƒ valueOf()
__defineGetter__: ƒ __defineGetter__()
__defineSetter__: ƒ __defineSetter__()
__lookupGetter__: ƒ __lookupGetter__()
__lookupSetter__: ƒ __lookupSetter__()
__proto__: (...)
get __proto__: ƒ __proto__()
set __proto__: ƒ __proto__()
</browser console>

<vendor_classification.log>
{"timestamp": "2025-04-07T05:40:06.871912Z", "level": "INFO", "logger": "root", "message": "LLM API trace logging initialized", "module": "logging_config", "function": "setup_logging", "line": 167, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de", "file": "/data/logs/llm_api_trace_worker.log"}
{"timestamp": "2025-04-07T05:40:06.872877Z", "level": "INFO", "logger": "root", "message": "Logging setup complete", "module": "logging_config", "function": "setup_logging", "line": 183, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de", "log_level": "DEBUG", "log_dir": "/data/logs", "handlers": ["StreamHandler", "RotatingFileHandler (/data/logs/vendor_classification.log)", "RotatingFileHandler (/data/logs/errors.log)"], "async_mode": false}
{"timestamp": "2025-04-07T05:40:06.873428Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Initializing Celery app", "module": "celery_app", "function": "<module>", "line": 31, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de", "python_executable": "/usr/local/bin/python3.11", "python_version": "3.11.11 (main, Mar 18 2025, 03:15:35) [GCC 12.2.0]", "python_path": ["/usr/local/bin", "/app", "/usr/local/lib/python311.zip", "/usr/local/lib/python3.11", "/usr/local/lib/python3.11/lib-dynload", "/usr/local/lib/python3.11/site-packages"], "cwd": "/app"}
{"timestamp": "2025-04-07T05:40:06.989394Z", "level": "INFO", "logger": "vendor_classification", "message": "Initializing application settings", "module": "config", "function": "<module>", "line": 13, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.992459Z", "level": "INFO", "logger": "vendor_classification", "message": "Settings initialized with DATABASE_URL: postgresql://postgres:postgres@db:5432/vendor_classification", "module": "config", "function": "__init__", "line": 57, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.992941Z", "level": "INFO", "logger": "vendor_classification", "message": "OPENROUTER_MODEL: deepseek/deepseek-chat-v3-0324:free", "module": "config", "function": "__init__", "line": 58, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.993282Z", "level": "INFO", "logger": "vendor_classification", "message": "OPENROUTER_API_KEY present: True", "module": "config", "function": "__init__", "line": 60, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.993628Z", "level": "INFO", "logger": "vendor_classification", "message": "OPENROUTER_API_BASE present: True", "module": "config", "function": "__init__", "line": 61, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.993936Z", "level": "INFO", "logger": "vendor_classification", "message": "TAVILY_API_KEY present: True", "module": "config", "function": "__init__", "line": 62, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.994232Z", "level": "INFO", "logger": "vendor_classification", "message": "Application settings loaded successfully", "module": "config", "function": "<module>", "line": 65, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.994587Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Successfully imported settings", "module": "celery_app", "function": "<module>", "line": 43, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.994955Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Creating Celery app", "module": "celery_app", "function": "<module>", "line": 49, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.996320Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery app created", "module": "celery_app", "function": "<module>", "line": 56, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de", "broker": "redis://redis:6379/0"}
{"timestamp": "2025-04-07T05:40:06.996842Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery configuration updated", "module": "celery_app", "function": "<module>", "line": 68, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.997191Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Connecting Celery signal handlers...", "module": "celery_app", "function": "<module>", "line": 71, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.997680Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery signal handlers connected.", "module": "celery_app", "function": "<module>", "line": 126, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:06.998067Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Attempting to import tasks for registration...", "module": "celery_app", "function": "<module>", "line": 133, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:07.227764Z", "level": "INFO", "logger": "vendor_classification.database", "message": "Initializing database connection", "module": "database", "function": "<module>", "line": 11, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:07.319712Z", "level": "INFO", "logger": "vendor_classification.database", "message": "Database engine created successfully for db:5432/vendor_classification", "module": "database", "function": "<module>", "line": 16, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:07.320716Z", "level": "INFO", "logger": "vendor_classification.database", "message": "Database session factory created", "module": "database", "function": "<module>", "line": 23, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:07.321529Z", "level": "INFO", "logger": "vendor_classification.database", "message": "SQLAlchemy Base declarative_base initialized", "module": "database", "function": "<module>", "line": 27, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:07.327778Z", "level": "DEBUG", "logger": "vendor_classification.log_utils", "message": "Successfully imported set_correlation_id from core.log_context.", "module": "log_utils", "function": "<module>", "line": 27, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.446591Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Applying @log_function_call decorator to function: services.file_service.save_upload_file", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.447636Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Function services.file_service.save_upload_file is sync, using sync_wrapper.", "module": "log_utils", "function": "decorator", "line": 233, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.448169Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Applying @log_function_call decorator to function: services.file_service.read_vendor_file", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.448582Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Function services.file_service.read_vendor_file is sync, using sync_wrapper.", "module": "log_utils", "function": "decorator", "line": 233, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.449480Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Applying @log_function_call decorator to function: services.file_service.normalize_vendor_data", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.449965Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Function services.file_service.normalize_vendor_data is sync, using sync_wrapper.", "module": "log_utils", "function": "decorator", "line": 233, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.450385Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Applying @log_function_call decorator to function: services.file_service.generate_output_file", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.450802Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Function services.file_service.generate_output_file is sync, using sync_wrapper.", "module": "log_utils", "function": "decorator", "line": 233, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.582080Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Successfully imported generate_batch_prompt and generate_search_prompt from tasks.classification_prompts.", "module": "llm_service", "function": "<module>", "line": 29, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.582779Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Applying @log_function_call decorator to function: services.llm_service.classify_batch", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.583203Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Function services.llm_service.classify_batch is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.583597Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Applying @log_function_call decorator to function: services.llm_service.process_search_results", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.584026Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Function services.llm_service.process_search_results is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.586028Z", "level": "DEBUG", "logger": "vendor_classification.search_service", "message": "Applying @log_function_call decorator to function: services.search_service.search_vendor", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.586453Z", "level": "DEBUG", "logger": "vendor_classification.search_service", "message": "Function services.search_service.search_vendor is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.597743Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.process_batch", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.598506Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.process_batch is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.598870Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.search_and_classify_recursively", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.599238Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.search_and_classify_recursively is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.599551Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.process_vendors", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.599907Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.process_vendors is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.600241Z", "level": "DEBUG", "logger": "vendor_classification.tasks", "message": "Successfully imported Dict and Any from typing for classification tasks.", "module": "classification_tasks", "function": "<module>", "line": 32, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.600656Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Successfully imported 'tasks.classification_tasks.process_vendor_file'", "module": "celery_app", "function": "<module>", "line": 136, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.603452Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Tasks registered in Celery app: ['celery.chord', 'celery.chunks', 'celery.chord_unlock', 'celery.group', 'celery.map', 'celery.backend_cleanup', 'tasks.classification_tasks.process_vendor_file', 'celery.chain', 'celery.starmap', 'celery.accumulate']", "module": "celery_app", "function": "<module>", "line": 146, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:08.603790Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery app initialization finished.", "module": "celery_app", "function": "<module>", "line": 148, "process_id": 8, "thread_id": 281473714139168, "host": "79a92ebbf6de"}
{"timestamp": "2025-04-07T05:40:16.597667Z", "level": "INFO", "logger": "root", "message": "LLM API trace logging initialized", "module": "logging_config", "function": "setup_logging", "line": 167, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "file": "/data/logs/llm_api_trace_worker.log"}
{"timestamp": "2025-04-07T05:40:16.604583Z", "level": "INFO", "logger": "root", "message": "Logging setup complete", "module": "logging_config", "function": "setup_logging", "line": 183, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "log_level": "DEBUG", "log_dir": "/data/logs", "handlers": ["StreamHandler", "RotatingFileHandler (/data/logs/vendor_classification.log)", "RotatingFileHandler (/data/logs/errors.log)"], "async_mode": false}
{"timestamp": "2025-04-07T05:40:16.607204Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Initializing Celery app", "module": "celery_app", "function": "<module>", "line": 31, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "python_executable": "/usr/local/bin/python3.11", "python_version": "3.11.11 (main, Mar 18 2025, 03:15:35) [GCC 12.2.0]", "python_path": ["/app", "/usr/local/bin", "/app", "/usr/local/lib/python311.zip", "/usr/local/lib/python3.11", "/usr/local/lib/python3.11/lib-dynload", "/usr/local/lib/python3.11/site-packages"], "cwd": "/app"}
{"timestamp": "2025-04-07T05:40:16.615335Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Successfully imported settings", "module": "celery_app", "function": "<module>", "line": 43, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.617506Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Creating Celery app", "module": "celery_app", "function": "<module>", "line": 49, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.620050Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery app created", "module": "celery_app", "function": "<module>", "line": 56, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "broker": "redis://redis:6379/0"}
{"timestamp": "2025-04-07T05:40:16.621615Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery configuration updated", "module": "celery_app", "function": "<module>", "line": 68, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.622651Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Connecting Celery signal handlers...", "module": "celery_app", "function": "<module>", "line": 71, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.625019Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery signal handlers connected.", "module": "celery_app", "function": "<module>", "line": 126, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.626341Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Attempting to import tasks for registration...", "module": "celery_app", "function": "<module>", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.691373Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Successfully imported generate_batch_prompt and generate_search_prompt from tasks.classification_prompts.", "module": "llm_service", "function": "<module>", "line": 29, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.693009Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Applying @log_function_call decorator to function: services.llm_service.classify_batch", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.694862Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Function services.llm_service.classify_batch is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.697713Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Applying @log_function_call decorator to function: services.llm_service.process_search_results", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.699373Z", "level": "DEBUG", "logger": "vendor_classification.llm_service", "message": "Function services.llm_service.process_search_results is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.704740Z", "level": "DEBUG", "logger": "vendor_classification.search_service", "message": "Applying @log_function_call decorator to function: services.search_service.search_vendor", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.706247Z", "level": "DEBUG", "logger": "vendor_classification.search_service", "message": "Function services.search_service.search_vendor is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.746983Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.process_batch", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.748280Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.process_batch is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.749167Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.search_and_classify_recursively", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.749763Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.search_and_classify_recursively is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.750313Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Applying @log_function_call decorator to function: tasks.classification_logic.process_vendors", "module": "log_utils", "function": "decorator", "line": 93, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.750835Z", "level": "DEBUG", "logger": "vendor_classification.classification_logic", "message": "Function tasks.classification_logic.process_vendors is async, using async_wrapper.", "module": "log_utils", "function": "decorator", "line": 230, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.751471Z", "level": "DEBUG", "logger": "vendor_classification.tasks", "message": "Successfully imported Dict and Any from typing for classification tasks.", "module": "classification_tasks", "function": "<module>", "line": 32, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.752223Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Successfully imported 'tasks.classification_tasks.process_vendor_file'", "module": "celery_app", "function": "<module>", "line": 136, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.865996Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Tasks registered in Celery app: ['celery.chord', 'celery.chunks', 'celery.chord_unlock', 'celery.group', 'celery.map', 'celery.backend_cleanup', 'tasks.classification_tasks.process_vendor_file', 'celery.chain', 'celery.starmap', 'celery.accumulate']", "module": "celery_app", "function": "<module>", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.867268Z", "level": "INFO", "logger": "vendor_classification.celery", "message": "Celery app initialization finished.", "module": "celery_app", "function": "<module>", "line": 148, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.879097Z", "level": "DEBUG", "logger": "vendor_classification.api.jobs", "message": "Successfully imported Dict from typing for jobs API.", "module": "jobs", "function": "<module>", "line": 25, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.937410Z", "level": "INFO", "logger": "root", "message": "LLM API trace logging initialized", "module": "logging_config", "function": "setup_logging", "line": 167, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "file": "/data/logs/llm_api_trace.log"}
{"timestamp": "2025-04-07T05:40:16.938228Z", "level": "INFO", "logger": "root", "message": "Logging setup complete", "module": "logging_config", "function": "setup_logging", "line": 183, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "log_level": "DEBUG", "log_dir": "/data/logs", "handlers": ["StreamHandler", "RotatingFileHandler (/data/logs/vendor_classification.log)", "RotatingFileHandler (/data/logs/errors.log)"], "async_mode": true}
{"timestamp": "2025-04-07T05:40:16.938618Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Including API routers...", "module": "main", "function": "<module>", "line": 87, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.949434Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Included jobs router with prefix /api/v1/jobs", "module": "main", "function": "<module>", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.959252Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Included users router with prefix /api/v1/users", "module": "main", "function": "<module>", "line": 101, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.959313Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Attempting to serve Vue frontend from: /app/frontend/dist", "module": "main", "function": "<module>", "line": 107, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.959582Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Vue build directory and index.html found. Static files will be mounted.", "module": "main", "function": "<module>", "line": 113, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:16.976723Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Mounting Vue app from directory: /app/frontend/dist", "module": "main", "function": "<module>", "line": 377, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:31.958196Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "d822527c-1128-4f1f-b71a-9494e7f8f62f", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "user-agent": "curl/8.7.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:40:31.968464Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:40:32.157808Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.186874Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.241296Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.665962Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa05675d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.666069Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f852b10> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.688736Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa028dd50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.689038Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.689500Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.689549Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.689640Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.689672Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.776753Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:40:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c730d87dc20825-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.777304Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.779168Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.795680Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.795764Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.795856Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.796496Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.971451Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f7223d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.971534Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f852b10> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985034Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f723f10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985270Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985572Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985606Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985854Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:32.985882Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.444756Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:40:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.446002Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.446232Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.446360Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.446452Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.446659Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.447099Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.447772Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.447860Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.448032Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:34.449350Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.4906461238861084, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:40:36.597046Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "1f2690e7-0746-4512-a644-96596cdf598b", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:40:36.597743Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:40:36.609078Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.610492Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.637342Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.671437Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f745510>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.671522Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8532f0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.686470Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0252950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.686710Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.686986Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.687013Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.687062Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.687079Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.771200Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:40:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c730f17995242b-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.771397Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.771473Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.781103Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.781189Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.781263Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.782919Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.846977Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa01bf350>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.847057Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8532f0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859036Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa264b450>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859226Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859404Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859431Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859620Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:36.859658Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138443Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:40:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138681Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138775Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138846Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138898Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.138985Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.139214Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.139505Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.139553Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.139645Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:40:38.139887Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.5427286624908447, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:41:08.258975Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "5cfae729-8e54-4c0b-9a98-d6c623c2d8fe", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:41:08.262415Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:41:08.281900Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.286369Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.326742Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.359303Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f747410>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.359397Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853380> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.373983Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f747590>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.374238Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.374664Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.374707Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.374789Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.374892Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.483727Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:41:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c731b778aa823e-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.484270Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.484437Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.489064Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.489131Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.489207Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.489835Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.507343Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f750690>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.507419Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853380> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.515695Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f7444d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.515846Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.516108Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.516150Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.516314Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:08.516341Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.399371Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:41:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.400294Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.400616Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.400852Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.401028Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.401372Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.402369Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.403181Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.403294Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.403970Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:10.405749Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.1459693908691406, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:41:38.652771Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "aeb85699-0274-4a91-96ca-16739d6cbb27", "query_params": {"job_id": "48b0e029-e33f-4197-8310-d0ea4976243c"}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "cache-control": "max-age=0", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-ch-ua-platform": "\"macOS\"", "upgrade-insecure-requests": "1", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "navigate", "sec-fetch-user": "?1", "sec-fetch-dest": "document", "referer": "http://localhost:8001/?job_id=48b0e029-e33f-4197-8310-d0ea4976243c", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:41:38.665226Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.011566877365112305, "response_headers": {"content-type": "text/html; charset=utf-8", "content-length": "703", "last-modified": "Mon, 07 Apr 2025 05:39:21 GMT", "etag": "e075f395e474b1526713df48a598469c"}}
{"timestamp": "2025-04-07T05:41:38.765566Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /assets/index-BBv3v24j.css", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "e2f861c7-f38b-4cb8-b19c-b782367e1b53", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "origin": "http://localhost:8001", "sec-ch-ua-platform": "\"macOS\"", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "accept": "text/css,*/*;q=0.1", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "style", "referer": "http://localhost:8001/?job_id=48b0e029-e33f-4197-8310-d0ea4976243c", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5", "if-none-match": "7a379550a0a12e6219462907d5e67404", "if-modified-since": "Mon, 07 Apr 2025 01:36:42 GMT"}}
{"timestamp": "2025-04-07T05:41:38.767807Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /assets/index-BjpwIDEQ.js", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "de6e01da-3edf-42ab-943b-48024a4e1b31", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "origin": "http://localhost:8001", "sec-ch-ua-platform": "\"macOS\"", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "accept": "*/*", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "script", "referer": "http://localhost:8001/?job_id=48b0e029-e33f-4197-8310-d0ea4976243c", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5", "if-none-match": "148699cc03f259f8e59a3b243d85eaac", "if-modified-since": "Mon, 07 Apr 2025 01:36:42 GMT"}}
{"timestamp": "2025-04-07T05:41:38.769837Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /assets/index-BBv3v24j.css", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.0041120052337646484, "response_headers": {"content-type": "text/css; charset=utf-8", "content-length": "29894", "last-modified": "Mon, 07 Apr 2025 05:39:21 GMT", "etag": "cc54fbe3c652c6dcb3c659a3a21aa712"}}
{"timestamp": "2025-04-07T05:41:38.774771Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /assets/index-BjpwIDEQ.js", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.006869792938232422, "response_headers": {"content-type": "application/javascript", "content-length": "219997", "last-modified": "Mon, 07 Apr 2025 05:39:21 GMT", "etag": "f1d33108b9cb8ceeb54f6d187e3939e5"}}
{"timestamp": "2025-04-07T05:41:38.854578Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /favicon.ico", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "bda10752-371d-41cf-8f3f-260a04b18167", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "accept": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "no-cors", "sec-fetch-dest": "image", "referer": "http://localhost:8001/?job_id=48b0e029-e33f-4197-8310-d0ea4976243c", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5", "if-none-match": "e352d5d298aea3e112089e263919a235", "if-modified-since": "Mon, 07 Apr 2025 01:36:42 GMT"}}
{"timestamp": "2025-04-07T05:41:38.856070Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /favicon.ico", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.001360177993774414, "response_headers": {"content-type": "image/vnd.microsoft.icon", "content-length": "4286", "last-modified": "Mon, 07 Apr 2025 05:39:21 GMT", "etag": "8054916d2c1a8d75348d993eaf494e3f"}}
{"timestamp": "2025-04-07T05:41:40.485699Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "97e9ebd4-8284-411f-97c7-8e97c4dbd8ad", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:41:40.486507Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:41:40.498893Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.500958Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.530359Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.654127Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f753f10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.654233Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853890> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.701803Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0112810>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.702285Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.702863Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.702930Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.703030Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.703062Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.787237Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:41:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c732819f5007bf-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.788297Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.788631Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.799134Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.799348Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.799568Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.801050Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.834627Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffb7836590>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.834756Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853890> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.847525Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0263490>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.847926Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.848492Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.848565Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.848842Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:40.848883Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.525995Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:41:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.527144Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.527487Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.527729Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.527991Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.528340Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.529182Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.530184Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.530312Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.530657Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:41.532109Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.046250820159912, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:41:49.193197Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "d6a0f666-61b6-40fb-a6a6-5edf04f7672c", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-ch-ua-platform": "\"macOS\"", "upgrade-insecure-requests": "1", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "none", "sec-fetch-mode": "navigate", "sec-fetch-user": "?1", "sec-fetch-dest": "document", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5", "if-none-match": "e98932c61321ea67f56c70786e0b99cd", "if-modified-since": "Mon, 07 Apr 2025 01:36:42 GMT"}}
{"timestamp": "2025-04-07T05:41:49.195542Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.0022017955780029297, "response_headers": {"content-type": "text/html; charset=utf-8", "content-length": "703", "last-modified": "Mon, 07 Apr 2025 05:39:21 GMT", "etag": "e075f395e474b1526713df48a598469c"}}
{"timestamp": "2025-04-07T05:41:56.768288Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: POST /token", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "a2c95b03-919f-4a60-8ae9-d0e22f78eca0", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "content-length": "32", "sec-ch-ua-platform": "\"macOS\"", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json, text/plain, */*", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "content-type": "application/x-www-form-urlencoded", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "origin": "http://localhost:8001", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:41:56.772903Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_start with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773000Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_name with data[0:8]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773061Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_data with data[9:14]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773108Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773176Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_start with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773211Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_name with data[15:23]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773231Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_data with data[24:32]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773293Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_field_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.773346Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.777402Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.778246Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Login attempt", "module": "main", "function": "login_for_access_token", "line": 241, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "ip": "192.168.65.1"}
{"timestamp": "2025-04-07T05:41:56.778444Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Calling: api.auth.authenticate_user", "module": "log_utils", "function": "sync_wrapper", "line": 122, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.778512Z", "level": "INFO", "logger": "vendor_classification.auth", "message": "Authentication attempt", "module": "auth", "function": "authenticate_user", "line": 57, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:41:56.778600Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Starting: User authentication", "module": "log_utils", "function": "__enter__", "line": 43, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.803008Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found in database", "module": "auth", "function": "authenticate_user", "line": 63, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:41:56.803085Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Calling: api.auth.verify_password", "module": "log_utils", "function": "sync_wrapper", "line": 122, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.803125Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Starting: Password verification", "module": "log_utils", "function": "__enter__", "line": 43, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.803142Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Verifying password", "module": "auth", "function": "verify_password", "line": 33, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hash_prefix": "$2b$1"}
{"timestamp": "2025-04-07T05:41:56.807574Z", "level": "DEBUG", "logger": "passlib.handlers.bcrypt", "message": "detected 'bcrypt' backend, version '4.0.1'", "module": "bcrypt", "function": "_load_backend_mixin", "line": 625, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:56.807770Z", "level": "DEBUG", "logger": "passlib.handlers.bcrypt", "message": "'bcrypt' backend lacks $2$ support, enabling workaround", "module": "bcrypt", "function": "_finalize_backend_mixin", "line": 406, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.244347Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Password verification result", "module": "auth", "function": "verify_password", "line": 35, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "result": true}
{"timestamp": "2025-04-07T05:41:57.244513Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: Password verification in 0.441s", "module": "log_utils", "function": "__exit__", "line": 72, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.441}
{"timestamp": "2025-04-07T05:41:57.244548Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: api.auth.verify_password in 0.441s", "module": "log_utils", "function": "sync_wrapper", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.441}
{"timestamp": "2025-04-07T05:41:57.244577Z", "level": "INFO", "logger": "vendor_classification.auth", "message": "Authentication successful", "module": "auth", "function": "authenticate_user", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:41:57.244597Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: User authentication in 0.466s", "module": "log_utils", "function": "__exit__", "line": 72, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.466}
{"timestamp": "2025-04-07T05:41:57.244615Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: api.auth.authenticate_user in 0.466s", "module": "log_utils", "function": "sync_wrapper", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.466}
{"timestamp": "2025-04-07T05:41:57.244792Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Calling: api.auth.create_access_token", "module": "log_utils", "function": "sync_wrapper", "line": 122, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "function_args": "data={'sub': 'admin'}, expires_delta=datetime.timedelta(seconds=1800)"}
{"timestamp": "2025-04-07T05:41:57.244829Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Starting: JWT token creation", "module": "log_utils", "function": "__enter__", "line": 43, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.244852Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Creating access token", "module": "auth", "function": "create_access_token", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "subject": "admin"}
{"timestamp": "2025-04-07T05:41:57.245239Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Access token created", "module": "auth", "function": "create_access_token", "line": 87, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "subject": "admin", "expires_at": "2025-04-07T06:11:57.244864"}
{"timestamp": "2025-04-07T05:41:57.245273Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: JWT token creation in 0.000s", "module": "log_utils", "function": "__exit__", "line": 72, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.0}
{"timestamp": "2025-04-07T05:41:57.245291Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Completed: api.auth.create_access_token in 0.000s", "module": "log_utils", "function": "sync_wrapper", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.0}
{"timestamp": "2025-04-07T05:41:57.245324Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Login successful, token generated", "module": "main", "function": "login_for_access_token", "line": 266, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "ip": "192.168.65.1", "token_expires_in_minutes": 30}
{"timestamp": "2025-04-07T05:41:57.258712Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: POST /token", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.4893214702606201, "response_headers": {"content-length": "413", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:41:57.260081Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.276767Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "418085db-cabc-48d0-bfb0-013b8c68be92", "query_params": {"limit": "100"}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:41:57.277399Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.278856Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "418085db-cabc-48d0-bfb0-013b8c68be92"}
{"timestamp": "2025-04-07T05:41:57.279258Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.279307Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.279331Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.281067Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:41:57.281142Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:41:57.283715Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:41:57.284250Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching job history", "module": "jobs", "function": "list_jobs", "line": 45, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_filter": null, "start_date": null, "end_date": null, "skip": 0, "limit": 100}
{"timestamp": "2025-04-07T05:41:57.288458Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Retrieved 0 jobs from history.", "module": "jobs", "function": "list_jobs", "line": 76, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:41:57.288740Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.011862516403198242, "response_headers": {"content-length": "2", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:41:57.289659Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.620492Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "d2787829-1d09-4e59-8ce1-19f1eead3b93", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:42:11.623786Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:42:11.637857Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.640953Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.672050Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.698272Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde3b10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.698386Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853c80> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712173Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde3610>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712431Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712765Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712809Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712875Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.712901Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.775492Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:42:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c733435b42fc33-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.775930Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.776091Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.779769Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.779837Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.779907Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.780486Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.872403Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f762710>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.872552Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853c80> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.887609Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0111190>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.887888Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.888429Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.888501Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.889025Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:11.889098Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.478446Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:42:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.479106Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.479352Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.479666Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.479844Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.480119Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.480878Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.481867Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.482011Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.482333Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:13.483598Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.8621759414672852, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:42:43.559750Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "05adc468-9f57-4738-9c7e-4f3be656cab3", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:42:43.562602Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:42:43.577674Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.581018Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.610665Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.635399Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddee6d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.635478Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853e30> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.650306Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddeecd0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.650579Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.650946Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.650998Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.651071Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.651098Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.753679Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:42:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c7340afc432087-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.754211Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.754370Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.757899Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.757968Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.758041Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.758650Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.831467Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: POST /api/v1/upload", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "4cbf0e3c-8228-4f75-ba1f-efb2e6185bb4", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "content-length": "74008", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "content-type": "multipart/form-data; boundary=----WebKitFormBoundaryfewdg3RwRrTz6DjV", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "origin": "http://localhost:8001", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:42:43.841115Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_begin with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841249Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_field with data[42:61]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841298Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_value with data[63:93]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841323Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841358Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_headers_finished with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841431Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[97:108]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841491Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841525Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_begin with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841555Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_field with data[152:171]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841582Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_value with data[173:231]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841594Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841613Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_field with data[233:245]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841640Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_value with data[247:312]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841652Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841666Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_headers_finished with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841824Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[316:13038]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841854Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841868Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[13039:13207]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841882Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841896Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[13208:13460]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841909Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841943Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[13461:17133]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841959Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.841996Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[17134:19497]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842024Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842043Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[19498:20470]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842061Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842076Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[20471:20892]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842089Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842113Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[20893:23632]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842128Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842162Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[23633:23885]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842180Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842204Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[23886:26249]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842218Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842237Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[26250:27222]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842271Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842297Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[27223:27897]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842317Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842369Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[27898:30389]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842403Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842465Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[30390:30642]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842484Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842516Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[30643:33681]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842579Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842597Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[33682:34232]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842610Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842624Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[34233:34654]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842637Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842662Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[34655:37101]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842695Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842718Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[37102:37399]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842745Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842772Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[37400:37652]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842790Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842822Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[37653:40021]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842844Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842888Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[40022:40443]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842908Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842926Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[40444:40994]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842940Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842954Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[40995:41669]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842967Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.842990Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[41670:44156]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843004Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843017Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[44157:44409]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843030Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:1]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843102Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[44410:57944]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843735Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[0:15918]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843800Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843824Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_begin with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843849Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_field with data[15962:15981]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843893Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_value with data[15983:16013]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843910Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_header_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.843930Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_headers_finished with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.844039Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_data with data[16017:16018]", "module": "multipart", "function": "callback", "line": 583, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.844084Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_part_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.844099Z", "level": "DEBUG", "logger": "multipart.multipart", "message": "Calling on_end with no data", "module": "multipart", "function": "callback", "line": 586, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.845884Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.846624Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "4cbf0e3c-8228-4f75-ba1f-efb2e6185bb4"}
{"timestamp": "2025-04-07T05:42:43.846833Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.846887Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.846908Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.847498Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:42:43.847532Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:42:43.851961Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:42:43.852989Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Upload request received", "module": "main", "function": "upload_vendor_file", "line": 305, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "job_id": "ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "company_name": "test_client", "target_level": 2, "uploaded_filename": "test_vendor_name-3.xlsx", "content_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "username": "admin"}
{"timestamp": "2025-04-07T05:42:43.853046Z", "level": "DEBUG", "logger": "vendor_classification.api", "message": "Attempting to save uploaded file for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 323, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.853111Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Calling: services.file_service.save_upload_file", "module": "log_utils", "function": "sync_wrapper", "line": 122, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.856163Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Ensured job directory exists", "module": "file_service", "function": "save_upload_file", "line": 40, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "directory": "/data/input/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b"}
{"timestamp": "2025-04-07T05:42:43.856199Z", "level": "INFO", "logger": "vendor_classification.file_service", "message": "Attempting to save file", "module": "file_service", "function": "save_upload_file", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "path": "/data/input/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/test_vendor_name-3.xlsx"}
{"timestamp": "2025-04-07T05:42:43.856246Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Starting: File saving", "module": "log_utils", "function": "__enter__", "line": 43, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.868022Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Completed: File saving in 0.012s", "module": "log_utils", "function": "__exit__", "line": 72, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.012}
{"timestamp": "2025-04-07T05:42:43.868304Z", "level": "INFO", "logger": "vendor_classification.file_service", "message": "File saved successfully", "module": "file_service", "function": "save_upload_file", "line": 68, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "path": "/data/input/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/test_vendor_name-3.xlsx", "size_bytes": 73546}
{"timestamp": "2025-04-07T05:42:43.868345Z", "level": "DEBUG", "logger": "vendor_classification.file_service", "message": "Completed: services.file_service.save_upload_file in 0.015s", "module": "log_utils", "function": "sync_wrapper", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "duration_seconds": 0.015}
{"timestamp": "2025-04-07T05:42:43.868364Z", "level": "INFO", "logger": "vendor_classification.api", "message": "File saved successfully for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 325, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "saved_path": "/data/input/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/test_vendor_name-3.xlsx"}
{"timestamp": "2025-04-07T05:42:43.868378Z", "level": "DEBUG", "logger": "vendor_classification.api", "message": "Creating database job record for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 335, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.879380Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Database job record created successfully for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 348, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "target_level": 2}
{"timestamp": "2025-04-07T05:42:43.879438Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Adding Celery task 'process_vendor_file' to background tasks for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 358, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.880137Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Celery task queued successfully for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "main", "function": "upload_vendor_file", "line": 362, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.880203Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Upload request for job ea2e0b3a-e893-4f5e-9930-4ce4f843d95b processed successfully, returning 202 Accepted.", "module": "main", "function": "upload_vendor_file", "line": 369, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.882649Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: POST /api/v1/upload", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 202, "duration": 0.04559612274169922, "response_headers": {"content-length": "369", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:42:43.920765Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.959749Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde1c10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.959857Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853e30> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.972247Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde2c90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.972511Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.972760Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.972804Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.973112Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:43.973140Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.405513Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "7879ba91-32aa-48b1-8edf-e399311cb9a2", "query_params": {"limit": "100"}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:42:45.406599Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.407275Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "7879ba91-32aa-48b1-8edf-e399311cb9a2"}
{"timestamp": "2025-04-07T05:42:45.407348Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.407394Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.407425Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.407685Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:42:45.407727Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:42:45.410723Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:42:45.411538Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching job history", "module": "jobs", "function": "list_jobs", "line": 45, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_filter": null, "start_date": null, "end_date": null, "skip": 0, "limit": 100}
{"timestamp": "2025-04-07T05:42:45.416137Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Retrieved 1 jobs from history.", "module": "jobs", "function": "list_jobs", "line": 76, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.417519Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.011830806732177734, "response_headers": {"content-length": "387", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:42:45.420460Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.668469Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:42:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.668969Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.669130Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.669317Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.669418Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.669567Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.670034Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.670774Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.670903Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.671288Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:42:45.671941Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.1114840507507324, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:07.463075Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "f848ce5c-aaff-4802-bb56-7d2b4a777696", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:07.467155Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.468802Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "f848ce5c-aaff-4802-bb56-7d2b4a777696"}
{"timestamp": "2025-04-07T05:43:07.469144Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.469277Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.469323Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.470792Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:07.470901Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:07.488695Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:07.489855Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.497275Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:07.498951Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.03510737419128418, "response_headers": {"content-length": "401", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:07.501260Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.437233Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "677244b9-3466-4ecc-8d55-7d2bdf488c57", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:12.438339Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.439311Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "677244b9-3466-4ecc-8d55-7d2bdf488c57"}
{"timestamp": "2025-04-07T05:43:12.439462Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.439555Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.439635Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.440087Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:12.440171Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:12.450293Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:12.450494Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.451923Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:12.452442Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.015012979507446289, "response_headers": {"content-length": "387", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:12.455184Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.750562Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "d200f3b1-4dc1-474c-be97-d1241509410e", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:43:15.751128Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:43:15.756030Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.757866Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.786270Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.807090Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc88090>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.807166Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8532f0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.828984Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde7990>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.829216Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.829520Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.829555Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.829602Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.829618Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.891099Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:43:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c734d41d91c9a8-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.891517Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.891652Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.894588Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.894640Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.894700Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.895365Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.913711Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc8b950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.913775Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8532f0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925091Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc89a90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925382Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925579Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925606Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925746Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:15.925766Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.436329Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "cea2cee3-5457-45c8-99c3-523c50b83abc", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:17.437489Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.437948Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "cea2cee3-5457-45c8-99c3-523c50b83abc"}
{"timestamp": "2025-04-07T05:43:17.438059Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.438149Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.438185Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.438537Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:17.438594Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:17.442323Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:17.442836Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.445198Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.445865Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.009396553039550781, "response_headers": {"content-length": "385", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:17.447402Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.466397Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:43:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.466698Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.466793Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.466901Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.466976Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.467090Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.467703Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.468236Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.468294Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.468400Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:17.468793Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.7181382179260254, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:22.437186Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "a8f72813-d631-4c85-accc-7958fee1cf23", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:22.438015Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.438599Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "a8f72813-d631-4c85-accc-7958fee1cf23"}
{"timestamp": "2025-04-07T05:43:22.438664Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.438722Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.438763Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.439116Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:22.439165Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:22.442563Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:22.442818Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.444548Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:22.445171Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.007792472839355469, "response_headers": {"content-length": "385", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:22.446985Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.438202Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "e77db2c1-b06e-4cf4-ab9b-7a24ca42cfaa", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:27.440216Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.441705Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "e77db2c1-b06e-4cf4-ab9b-7a24ca42cfaa"}
{"timestamp": "2025-04-07T05:43:27.441850Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.441911Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.441947Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.442540Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:27.442588Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:27.448402Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:27.448932Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.451363Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:27.452806Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.014173507690429688, "response_headers": {"content-length": "385", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:27.456191Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.440024Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "3814980a-a517-4fb6-9355-a83a1b1aa497", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:32.441028Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.441606Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "3814980a-a517-4fb6-9355-a83a1b1aa497"}
{"timestamp": "2025-04-07T05:43:32.441674Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.441721Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.441772Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.442283Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:32.442349Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:32.446209Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:32.446534Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 94, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.448303Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning details for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job", "line": 110, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.448953Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.008744001388549805, "response_headers": {"content-length": "454", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:32.451498Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.473204Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/stats", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "87751ab0-1622-4c2d-adee-5237eafeac74", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:43:32.478015Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.483156Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "87751ab0-1622-4c2d-adee-5237eafeac74"}
{"timestamp": "2025-04-07T05:43:32.483346Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.483625Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.483745Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.487400Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:43:32.487654Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:43:32.499202Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:43:32.499623Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Fetching statistics for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job_stats", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.500844Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Returning statistics for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "read_job_stats", "line": 140, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:32.501235Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/stats", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.02763056755065918, "response_headers": {"content-length": "668", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:43:32.503345Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.541811Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "6ddf3944-e3d0-444d-8071-5e45492afcdc", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:43:47.543588Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:43:47.554707Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.557857Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.587919Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.611288Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dddc050>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.611371Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853bf0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.628933Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc9a0d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.629176Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.629611Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.629651Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.629709Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.629733Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.725139Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:43:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c7359ad94ec797-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.725574Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.725729Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.730728Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.730798Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.730871Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.731412Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.850729Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f750f10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.850837Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f853bf0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.862962Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa01bf350>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.863229Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.863666Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.863739Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.864078Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:47.864127Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.301786Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:43:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.302824Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.303187Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.303478Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.303738Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.304149Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.305457Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.305942Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.306221Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.306503Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:43:49.307945Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.765481948852539, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:44:18.841231Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/download", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "a7c46c7c-4281-45ce-a263-1abb4ebc16c7", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8001", "connection": "keep-alive", "sec-ch-ua-platform": "\"macOS\"", "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0NDAwNjMxN30.-G7m9o16Qxk3WJQgO4zZ6aBndO-nShVB-BJIRO-Nce4", "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", "accept": "application/json", "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Brave\";v=\"134\"", "sec-ch-ua-mobile": "?0", "sec-gpc": "1", "accept-language": "en-US,en;q=0.9", "sec-fetch-site": "same-origin", "sec-fetch-mode": "cors", "sec-fetch-dest": "empty", "referer": "http://localhost:8001/?job_id=ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "accept-encoding": "gzip, deflate, br, zstd", "cookie": "sessionid=woocq0sjvkufjyzvexqo1axa4ru6kve5"}}
{"timestamp": "2025-04-07T05:44:18.844577Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session created", "module": "database", "function": "get_db", "line": 32, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:18.846005Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "===> Entered get_current_user function (manual header read)", "module": "auth", "function": "get_current_user", "line": 96, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "correlation_id": "a7c46c7c-4281-45ce-a263-1abb4ebc16c7"}
{"timestamp": "2025-04-07T05:44:18.846272Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting to manually get Authorization header...", "module": "auth", "function": "get_current_user", "line": 106, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:18.846337Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Manually extracted token: eyJhbGciOi...", "module": "auth", "function": "get_current_user", "line": 127, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:18.846371Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Attempting JWT decode...", "module": "auth", "function": "get_current_user", "line": 138, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:18.848206Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Token decoded successfully", "module": "auth", "function": "get_current_user", "line": 141, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "payload_keys": ["sub", "exp"]}
{"timestamp": "2025-04-07T05:44:18.848345Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "Looking up user in database", "module": "auth", "function": "get_current_user", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin"}
{"timestamp": "2025-04-07T05:44:18.877780Z", "level": "DEBUG", "logger": "vendor_classification.auth", "message": "User found, returning user object.", "module": "auth", "function": "get_current_user", "line": 169, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "username": "admin", "user_id": "161a64d5-2bfc-427c-9103-82bd19add654"}
{"timestamp": "2025-04-07T05:44:18.878515Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Request to download results for job ID: ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "module": "jobs", "function": "download_job_results", "line": 160, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:18.880477Z", "level": "INFO", "logger": "vendor_classification.api.jobs", "message": "Streaming output file for download", "module": "jobs", "function": "download_job_results", "line": 187, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "job_id": "ea2e0b3a-e893-4f5e-9930-4ce4f843d95b", "file_path": "/data/output/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/classification_results_ea2e0b3a_20250407_054327.xlsx"}
{"timestamp": "2025-04-07T05:44:18.881492Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /api/v1/jobs/ea2e0b3a-e893-4f5e-9930-4ce4f843d95b/download", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 0.03971982002258301, "response_headers": {"content-type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "content-disposition": "attachment; filename=\"classification_results_ea2e0b3a_20250407_054327.xlsx\"", "content-length": "7235", "last-modified": "Mon, 07 Apr 2025 05:43:27 GMT", "etag": "fa5c3d36cda4c85cde29520780b2a4bc"}}
{"timestamp": "2025-04-07T05:44:18.885420Z", "level": "DEBUG", "logger": "vendor_classification.database", "message": "Database session closed", "module": "database", "function": "get_db", "line": 37, "process_id": 11, "thread_id": 281473339355552, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.372101Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "503106b0-f310-41e1-8054-61e4f3ed135b", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:44:19.372693Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:44:19.381732Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.384502Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.430878Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.452505Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc9aed0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.452612Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b380> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.465917Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc9b810>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.466208Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.466623Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.466668Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.466721Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.466739Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.550382Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:44:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73661d8999c4c-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.550861Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.551035Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.561862Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.561964Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.562039Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.562686Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.657458Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc99410>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.657549Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b380> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.669924Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc98ed0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.670161Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.670540Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.670608Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.670915Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:19.670952Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.169143Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:44:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.169789Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.170002Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.170183Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.170326Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.170561Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.171458Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.171825Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.171894Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.172181Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:21.173084Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.8008556365966797, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:44:51.257238Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "e9096e29-4ea9-41ee-9e75-5b57c6215e1c", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:44:51.261431Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:44:51.278991Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.282186Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.316580Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.360325Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca3e10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.360418Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c200> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376171Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca37d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376443Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376816Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376854Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376924Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.376950Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.453844Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:44:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c737294a738286-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.454332Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.454478Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.459294Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.459373Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.459450Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.460107Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.481378Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca1f90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.481452Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c200> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494002Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca28d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494169Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494401Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494437Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494599Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:51.494692Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.428199Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:44:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.428576Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.428768Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.428945Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.429065Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.429244Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.429684Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.430239Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.430315Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.430528Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:44:53.431469Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.1730868816375732, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:45:23.518530Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "bde5dc8a-8b7f-440b-bb1a-80861e139835", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:45:23.522726Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:45:23.538871Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.541929Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.572714Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.602915Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc1ce10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.603022Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8536e0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.620709Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f752810>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.620948Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.621310Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.621349Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.621429Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.621455Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.716588Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:45:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c737f2ca3339b8-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.718698Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.718915Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.722731Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.722795Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.722868Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.723475Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.828370Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0262f10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.828474Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f8536e0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.841290Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f7612d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.841594Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.841904Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.841936Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.842056Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:23.842078Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.478429Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:45:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.479520Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.479837Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.480131Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.480391Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.480775Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.481656Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.482705Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.482856Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.483177Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:25.484834Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.9652373790740967, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:45:55.600842Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "dc6f4118-0682-4cba-a610-b3e60dad386a", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:45:55.604589Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:45:55.626352Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.629140Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.659883Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.685513Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde3990>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.685600Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c7a0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.701673Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc4bad0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.702062Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.702417Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.702448Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.702505Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.702528Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.763237Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:45:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c738bb485ed8b4-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.763682Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.763840Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.767581Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.767646Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.767722Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.768336Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.796023Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde6510>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.796099Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c7a0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.808322Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddd3950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.808525Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.808784Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.808844Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.808981Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:55.809005Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.431187Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:45:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'879'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.431964Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.432213Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.432447Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.432616Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.432909Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.433610Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.434263Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.434708Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.435067Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:45:57.436402Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.8346407413482666, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:46:27.513078Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "fd9408af-3049-4d58-90ec-1edf54f1d393", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:46:27.516737Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:46:27.530496Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.533359Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.564231Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.588689Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca1890>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.588772Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b800> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600062Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca1b50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600348Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600690Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600725Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600790Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.600813Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.651401Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:46:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73982a83eef60-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.651901Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.652072Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.656008Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.656090Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.656161Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.656865Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.672364Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca3910>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.672438Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b800> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.680899Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca3c90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.681053Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.681305Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.681338Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.681620Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:27.681653Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.066358Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:46:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.067362Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.067672Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.067951Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.068195Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.068615Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.069515Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.070437Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.070547Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.070820Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:29.072088Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.5580601692199707, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:46:59.150502Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "b3f5015f-fa42-4cf0-be16-838f891de4e2", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:46:59.154123Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:46:59.167425Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.170502Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.201665Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.320929Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0356a50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.321031Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c4d0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.335951Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0bc90d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.336222Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.336617Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.336670Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.336757Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.336785Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.415523Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:46:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73a48ffc20849-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.416394Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.416649Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.423526Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.423658Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.423797Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.424846Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.509634Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc899d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.509915Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c4d0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.524931Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc88810>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.525683Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.526744Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.526841Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.527602Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:46:59.527671Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.203062Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:47:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.204086Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.204482Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.204776Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.204997Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.205405Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.206242Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.207271Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.207461Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.208307Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:00.210048Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.0586044788360596, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:47:30.285561Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "72880892-4f18-4317-8f67-10a1aa49b3d5", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:47:30.287865Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:47:30.296610Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.298532Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.328890Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.349581Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde4790>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.349651Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9ca70> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.366966Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde6e10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.367152Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.367445Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.367495Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.367547Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.367567Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.478298Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:47:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73b0aecc607e1-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.478686Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.478843Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.485322Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.485407Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.485497Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.486328Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.522903Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca6f50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.523010Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9ca70> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.538410Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dbf0290>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.538813Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.539526Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.539587Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.540506Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:30.540619Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.558190Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:47:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.559124Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.559435Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.559676Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.559894Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.560252Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.561092Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.561935Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.562037Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.562340Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:47:32.563473Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.2773423194885254, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:48:02.632579Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "43f2076d-f9e5-445e-acdc-023eca5f972d", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:48:02.633324Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:48:02.637114Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.637969Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.667785Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.689635Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc1d410>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.689716Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9cb90> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.702533Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f722950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.702712Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.702982Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.703025Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.703080Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.703100Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.814794Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:48:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73bd50a0e7fe1-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.815332Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.815525Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.823246Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.823373Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.823495Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.824424Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.842678Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde7350>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.842804Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9cb90> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.855916Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dddc150>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.856222Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.856637Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.856706Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.856998Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:02.857050Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.894998Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:48:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.896096Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.896466Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.896732Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.896947Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.897346Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.898220Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.899104Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.899299Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.899565Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:03.900736Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.2679219245910645, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:48:34.028554Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "6d407858-f9fe-44e2-9e5f-9b2e6629929a", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:48:34.032521Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:48:34.052465Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.055847Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.091004Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.111978Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca5d90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.112052Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b650> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.126373Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca5c50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.126610Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.126987Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.127024Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.127087Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.127110Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.186477Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:48:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73c996c98e61b-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.186921Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.187086Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.191114Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.191188Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.191255Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.191808Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.273337Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca7390>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.273438Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b650> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.286535Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca7090>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.286796Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.287369Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.287430Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.287793Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:34.287839Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.425609Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:48:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.426613Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.426901Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.427211Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.427414Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.427736Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.428529Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.429501Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.429632Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.429940Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:48:35.431510Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.4019548892974854, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:49:05.502186Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "b1517026-f3cf-4ee3-bfc6-24c6f5da82a0", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:49:05.504132Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:49:05.511822Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.513514Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.543558Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.565586Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f734ed0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.565665Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c830> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.582884Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddd3950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.583097Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.583373Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.583411Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.583604Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.583637Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.666151Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:49:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73d5e0cb720cf-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.666439Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.666555Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.669777Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.669835Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.669894Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.670406Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.762040Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc98850>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.762192Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c830> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.775216Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc4a450>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.775555Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.775965Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.776029Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.776597Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:05.776661Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.202453Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:49:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.203458Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.203787Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.204094Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.204312Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.204624Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.205447Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.206392Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.206524Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.206825Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:08.207928Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.7052581310272217, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:49:38.270044Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "70fa24be-300b-4c69-886e-72ce7f8f402d", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:49:38.270633Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:49:38.273353Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.273974Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.300998Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.315243Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde4890>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.315322Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c710> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332044Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde7e10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332194Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332449Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332492Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332544Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.332563Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.429482Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:49:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73e2abbb48790-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.429694Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.429840Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.435371Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.435437Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.435515Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.436029Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.451767Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca1350>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.451860Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c710> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.464219Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dde7610>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.464431Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.464759Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.464803Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.465103Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:38.465134Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.944111Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:49:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.944989Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.945333Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.945579Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.945768Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.946090Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.947515Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.947921Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.948013Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.948230Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:49:39.949562Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.6793336868286133, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:50:10.026916Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "432a4e16-49fa-4a67-8fb8-a358e806ee3a", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:50:10.030545Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:50:10.044184Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.047593Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.078840Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.104417Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddefe50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.104501Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c4d0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122043Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc87b10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122341Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122654Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122685Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122742Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.122766Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.199218Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:50:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73ef16f6120d2-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.199689Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.199819Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.205294Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.205367Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.205435Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.206355Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.303045Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca2fd0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.303162Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c4d0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.319169Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca2890>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.319458Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.320022Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.320079Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.320304Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:10.320345Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.765006Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:50:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.765691Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.765881Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.766035Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.766148Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.766351Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.766847Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.767246Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.767302Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.767452Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:12.768320Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.7405190467834473, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:50:42.835290Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "c4fd11c5-c275-4c6f-8685-15d55d001c62", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:50:42.837495Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:50:42.846491Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.848507Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.878506Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.900942Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddd3950>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.901014Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9cb90> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.921446Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa025ad10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.921664Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.921996Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.922029Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.922083Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.922106Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.994529Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:50:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c73fbe6be507d7-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.994889Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:42.995037Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.001045Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.001129Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.001205Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.001833Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.029394Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca45d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.029487Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9cb90> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.043328Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca6a90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.043581Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.043996Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.044047Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.044256Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:43.044324Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.175926Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:50:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'879'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.176835Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.177111Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.177330Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.177529Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.177996Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.178863Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.179751Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.179900Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.180163Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:50:45.181335Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.3454434871673584, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:51:15.237061Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "665e620c-e95c-47a6-a357-b2ef15bcd841", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:51:15.237684Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:51:15.240767Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.241433Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.271035Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.335726Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0111290>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.335810Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c9e0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354002Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f750790>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354227Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354519Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354554Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354601Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.354617Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.449179Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:51:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c7408919c0d701-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.451072Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.451535Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.459382Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.459548Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.459793Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.461105Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.482549Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca86d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.482669Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9dc9c9e0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.495248Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca9350>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.495455Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.495888Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.495940Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.496124Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:15.496154Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.905250Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:51:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.905898Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.906036Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.906175Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.906268Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.906437Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.906860Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.907254Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.907321Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.907470Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:16.908883Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.6714715957641602, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:51:47.006389Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "31b1adbe-7dbc-42c2-bce2-8b6d00dd5e66", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:51:47.010027Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:51:47.028350Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.034709Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.066041Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.082167Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc497d0>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.082269Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76bda0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095124Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9ddd3c50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095371Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095792Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095834Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095910Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.095937Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.162382Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:51:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c7414f7a89d6d0-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.162885Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.163106Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.167618Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.167688Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.167761Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.168611Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.333991Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dbf1310>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.334239Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76bda0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.349587Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dbf1390>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.350256Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.351240Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.351342Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.352006Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:47.352098Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.459887Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:51:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.460222Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.460369Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.460492Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.460651Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.460933Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.461737Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.462549Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.462675Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.462994Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:51:48.464431Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 1.4572174549102783, "response_headers": {"content-length": "257", "content-type": "application/json"}}
{"timestamp": "2025-04-07T05:52:18.557882Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request started: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 50, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "request_id": "8699c6ce-ddc1-4c08-b1ad-247e6eba7fc0", "query_params": {}, "path_params": {}, "headers": {"host": "localhost:8000", "user-agent": "curl/7.88.1", "accept": "*/*"}}
{"timestamp": "2025-04-07T05:52:18.561520Z", "level": "INFO", "logger": "vendor_classification.api", "message": "Health check called", "module": "main", "function": "health_check", "line": 133, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "hostname": "6938e238876a", "ip": "172.18.0.5"}
{"timestamp": "2025-04-07T05:52:18.582701Z", "level": "DEBUG", "logger": "httpx", "message": "load_ssl_context verify=True cert=None trust_env=True http2=False", "module": "_config", "function": "load_ssl_context", "line": 79, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.585231Z", "level": "DEBUG", "logger": "httpx", "message": "load_verify_locations cafile='/usr/local/lib/python3.11/site-packages/certifi/cacert.pem'", "module": "_config", "function": "load_ssl_context_verify", "line": 146, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.616594Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='openrouter.ai' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.647675Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9f722c10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.647755Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b6e0> server_hostname='openrouter.ai' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.659991Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffffa0356f90>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.660227Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.660567Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.660609Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.660671Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.660697Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.715509Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:52:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Access-Control-Allow-Origin', b'*'), (b'CDN-Cache-Control', b'max-age=300'), (b'Vary', b'Accept-Encoding'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92c74214ca73c97f-IAD'), (b'Content-Encoding', b'gzip')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.716095Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET https://openrouter.ai/api/v1/models \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.716289Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'GET']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.720222Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.720287Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.720358Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.721157Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.started host='api.tavily.com' port=443 local_address=None timeout=5.0 socket_options=None", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.805997Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dca3a10>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.806113Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.started ssl_context=<ssl.SSLContext object at 0xffff9f76b6e0> server_hostname='api.tavily.com' timeout=5.0", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.816369Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0xffff9dc87f50>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.816615Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.816888Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_headers.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.816934Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.817091Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "send_request_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:18.817117Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.632093Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 07 Apr 2025 05:52:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'880'), (b'Connection', b'keep-alive'), (b'Server', b'nginx'), (b'content-security-policy', b\"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';base-uri 'self';form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;\"), (b'Strict-Transport-Security', b'max-age=31536000 ; includeSubDomains'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'DENY')])", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.633054Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST https://api.tavily.com/search \"HTTP/1.1 200 OK\"", "module": "_client", "function": "_send_single_request", "line": 1729, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.633356Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.started request=<Request [b'POST']>", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.633708Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "receive_response_body.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.633914Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.634251Z", "level": "DEBUG", "logger": "httpcore.http11", "message": "response_closed.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.635120Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.636157Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.636276Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.started", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.636593Z", "level": "DEBUG", "logger": "httpcore.connection", "message": "close.complete", "module": "_trace", "function": "atrace", "line": 85, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a"}
{"timestamp": "2025-04-07T05:52:20.638119Z", "level": "INFO", "logger": "vendor_classification.middleware", "message": "Request completed: GET /health", "module": "logging_middleware", "function": "dispatch", "line": 67, "process_id": 11, "thread_id": 281473824325664, "host": "6938e238876a", "status_code": 200, "duration": 2.0793325901031494, "response_headers": {"content-length": "257", "content-type": "application/json"}}

</vendor_classification.log>
</issue to address>


<output instruction>
1) Reflect on 5-7 different possible sources of the problem based on the code provided.
2) Distill those down to the most likely root cause.
3) Provide the COMPLETE UPDATED VERSION of *only* the files that need changes to fix the likely root cause.
</output instruction>


<Tree of Included Files>
- app/api/jobs.py
- app/models/classification.py
- app/tasks/classification_logic.py
- frontend/vue_frontend/src/components/JobStats.vue
- frontend/vue_frontend/src/services/api.ts
- frontend/vue_frontend/src/stores/job.ts
</Tree of Included Files>


<Concatenated Source Code>

<file path='app/api/jobs.py'>
# <file path='app/api/jobs.py'>
# app/api/jobs.py
from fastapi import APIRouter, Depends, HTTPException, Query, status
from sqlalchemy.orm import Session
from typing import List, Optional, Dict # <<< ADDED Dict HERE
from datetime import datetime
import logging # Import logging

from core.database import get_db
from api.auth import get_current_user
from models.user import User
from models.job import Job, JobStatus
from schemas.job import JobResponse # Import the new schema
# --- MODIFIED IMPORT: Import set_log_context from core.log_context ---
from core.logging_config import get_logger
from core.log_context import set_log_context
# --- END MODIFIED IMPORT ---
# --- ADDED: Logging confirmation ---
from core.config import settings # Need settings for file path construction
# --- END ADDED ---


logger = get_logger("vendor_classification.api.jobs")
# --- ADDED: Log confirmation after import ---
logger.debug("Successfully imported Dict from typing for jobs API.")
# --- END ADDED ---

router = APIRouter()

@router.get("/", response_model=List[JobResponse])
async def list_jobs(
    db: Session = Depends(get_db),
    current_user: User = Depends(get_current_user),
    status_filter: Optional[JobStatus] = Query(None, alias="status", description="Filter jobs by status"),
    start_date: Optional[datetime] = Query(None, description="Filter jobs created on or after this date (ISO format)"),
    end_date: Optional[datetime] = Query(None, description="Filter jobs created on or before this date (ISO format)"),
    skip: int = Query(0, ge=0, description="Number of jobs to skip for pagination"),
    limit: int = Query(100, ge=1, le=500, description="Maximum number of jobs to return"),
):
    """
    List jobs for the current user. Admins can see all jobs (optional enhancement).
    Supports filtering by status and date range, and pagination.
    """
    set_log_context({"username": current_user.username})
    logger.info("Fetching job history", extra={
        "status_filter": status_filter,
        "start_date": start_date.isoformat() if start_date else None,
        "end_date": end_date.isoformat() if end_date else None,
        "skip": skip,
        "limit": limit,
    })

    query = db.query(Job)

    # Filter by user (Admins could potentially see all - add logic here if needed)
    # For now, all users only see their own jobs
    # if not current_user.is_superuser: # Example admin check
    query = query.filter(Job.created_by == current_user.username)

    # Apply filters
    if status_filter:
        query = query.filter(Job.status == status_filter.value)
    if start_date:
        query = query.filter(Job.created_at >= start_date)
    if end_date:
        # Add a day to end_date to make it inclusive of the whole day if time is not specified
        # Or adjust based on desired behavior (e.g., end_date < end_date + timedelta(days=1))
        query = query.filter(Job.created_at <= end_date)

    # Order by creation date (newest first)
    query = query.order_by(Job.created_at.desc())

    # Apply pagination
    jobs = query.offset(skip).limit(limit).all()

    logger.info(f"Retrieved {len(jobs)} jobs from history.")

    # Convert Job models to JobResponse schemas
    # Pydantic v2 handles this automatically with from_attributes=True
    return jobs

# --- ADDED: Route to get a single job by ID ---
@router.get("/{job_id}", response_model=JobResponse)
async def read_job(
    job_id: str,
    db: Session = Depends(get_db),
    current_user: User = Depends(get_current_user),
):
    """
    Retrieve details for a specific job by its ID.
    Ensures the current user owns the job (or is an admin - future enhancement).
    """
    set_log_context({"username": current_user.username, "target_job_id": job_id})
    logger.info(f"Fetching details for job ID: {job_id}")

    job = db.query(Job).filter(Job.id == job_id).first()

    if not job:
        logger.warning(f"Job not found", extra={"job_id": job_id})
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Job not found")

    # --- Authorization Check ---
    # Ensure the user requesting the job is the one who created it
    # (Or add admin override logic here if needed)
    if job.created_by != current_user.username: # and not current_user.is_superuser:
        logger.warning(f"Authorization failed: User '{current_user.username}' attempted to access job '{job_id}' owned by '{job.created_by}'")
        raise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail="Not authorized to access this job")
    # --- End Authorization Check ---

    logger.info(f"Returning details for job ID: {job_id}")
    return job # Pydantic will validate against JobResponse
# --- END ADDED ROUTE ---

# --- ADDED: Route to get job stats ---
# (Assuming you have a separate stats endpoint, if not, integrate into read_job)
# --- MODIFIED: Using the imported Dict ---
@router.get("/{job_id}/stats", response_model=Dict) # Use Dict for now, or create a specific StatsResponse schema
async def read_job_stats(
    job_id: str,
    db: Session = Depends(get_db),
    current_user: User = Depends(get_current_user),
):
    """
    Retrieve processing statistics for a specific job.
    """
    set_log_context({"username": current_user.username, "target_job_id": job_id})
    logger.info(f"Fetching statistics for job ID: {job_id}")

    job = db.query(Job).filter(Job.id == job_id).first()

    if not job:
        logger.warning(f"Job not found for stats", extra={"job_id": job_id})
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Job not found")

    # Authorization Check (same as read_job)
    if job.created_by != current_user.username: # and not current_user.is_superuser:
        logger.warning(f"Authorization failed: User '{current_user.username}' attempted to access stats for job '{job_id}' owned by '{job.created_by}'")
        raise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail="Not authorized to access stats for this job")

    logger.info(f"Returning statistics for job ID: {job_id}")
    # The stats are stored as JSON in the Job model
    return job.stats if job.stats else {}
# --- END ADDED STATS ROUTE ---

# --- ADDED: Route to download results ---
# (Assuming you need a separate download endpoint)
@router.get("/{job_id}/download")
async def download_job_results(
    job_id: str,
    db: Session = Depends(get_db),
    current_user: User = Depends(get_current_user),
):
    """
    Downloads the output Excel file for a completed job.
    """
    from fastapi.responses import FileResponse # Import here
    import os # Import os

    set_log_context({"username": current_user.username, "target_job_id": job_id})
    logger.info(f"Request to download results for job ID: {job_id}")

    job = db.query(Job).filter(Job.id == job_id).first()

    if not job:
        logger.warning(f"Job not found for download", extra={"job_id": job_id})
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Job not found")

    # Authorization Check
    if job.created_by != current_user.username: # and not current_user.is_superuser:
        logger.warning(f"Authorization failed: User '{current_user.username}' attempted download for job '{job_id}' owned by '{job.created_by}'")
        raise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail="Not authorized to download results for this job")

    if job.status != JobStatus.COMPLETED.value or not job.output_file_name:
        logger.warning(f"Download requested but job not completed or output file missing",
                       extra={"job_id": job_id, "status": job.status, "output_file": job.output_file_name})
        raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail="Job not completed or output file not available.")

    # Construct the full path to the output file
    output_dir = os.path.join(settings.OUTPUT_DATA_DIR, job_id)
    file_path = os.path.join(output_dir, job.output_file_name)

    if not os.path.exists(file_path):
         logger.error(f"Output file record exists in DB but file not found on disk",
                      extra={"job_id": job_id, "expected_path": file_path})
         raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Output file not found.")

    logger.info(f"Streaming output file for download",
                extra={"job_id": job_id, "file_path": file_path})
    return FileResponse(
        path=file_path,
        filename=job.output_file_name, # Suggest filename to browser
        media_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )
# --- END ADDED DOWNLOAD ROUTE ---

# --- END of file path='app/api/jobs.py' ---
</file>

<file path='app/models/classification.py'>
# <file path='app/models/classification.py'>
# --- file path='app/models/classification.py' ---
from pydantic import BaseModel, Field
from typing import List, Dict, Optional, Any

class VendorClassification(BaseModel):
    """Vendor classification model."""
    vendor_name: str
    category_id: str
    category_name: str
    confidence: float = Field(ge=0.0, le=1.0)
    notes: Optional[str] = None
    classification_not_possible: bool = False
    classification_not_possible_reason: Optional[str] = None
    sources: Optional[List[Dict[str, str]]] = None
    classification_source: Optional[str] = None # e.g., 'Initial', 'Search'

class ClassificationBatchResponse(BaseModel):
    """Response model for classification batch (expected from LLM)."""
    # --- MODIFIED: Allow level up to 5 ---
    level: int = Field(ge=1, le=5)
    # --- END MODIFIED ---
    batch_id: str
    parent_category_id: Optional[str] = None
    classifications: List[VendorClassification] # LLM should return this structure

class ApiUsage(BaseModel):
    """API usage statistics."""
    # Field names match the keys used in the stats dictionary
    openrouter_calls: int = 0
    openrouter_prompt_tokens: int = 0
    openrouter_completion_tokens: int = 0
    openrouter_total_tokens: int = 0
    tavily_search_calls: int = 0
    cost_estimate_usd: float = 0.0

class ProcessingStats(BaseModel):
    """Processing statistics for a job (stored in Job.stats JSON)."""
    job_id: str
    company_name: str
    start_time: Any # Can be datetime or ISO string
    end_time: Optional[Any] = None
    processing_duration_seconds: Optional[float] = None
    total_vendors: int = 0
    unique_vendors: int = 0
    # --- UPDATED/ADDED Fields ---
    successfully_classified_l4: int = 0 # Keep L4 count for reference/comparison
    successfully_classified_l5: int = 0 # NEW: Total vendors reaching L5 (initial or post-search)
    classification_not_possible_initial: int = 0 # Vendors needing search initially
    invalid_category_errors: int = 0 # Count of times LLM returned invalid category ID
    search_attempts: int = 0 # How many vendors triggered the search path
    search_successful_classifications_l1: int = 0 # Vendors getting L1 via search
    search_successful_classifications_l5: int = 0 # NEW: Vendors getting L5 via search path
    # --- END UPDATED/ADDED ---
    api_usage: ApiUsage = Field(default_factory=ApiUsage)

</file>

<file path='app/tasks/classification_logic.py'>

# app/tasks/classification_logic.py
import asyncio
import time
from datetime import datetime
from typing import List, Dict, Any, Optional, Set
from sqlalchemy.orm import Session
from sqlalchemy.exc import SQLAlchemyError

from core.config import settings
from core.logging_config import get_logger
# Import context functions if needed directly (though often used via logger)
from core.log_context import set_log_context
# Import log helpers from utils
from utils.log_utils import LogTimer, log_function_call, log_duration

from models.job import Job, JobStatus, ProcessingStage
from models.taxonomy import Taxonomy
from services.llm_service import LLMService
from services.search_service import SearchService

logger = get_logger("vendor_classification.classification_logic")

# --- Constants ---
MAX_CONCURRENT_SEARCHES = 10 # Limit concurrent search/LLM processing for unknown vendors

# --- Helper Functions (Moved from classification_tasks.py) ---

def create_batches(items: List[Any], batch_size: int) -> List[List[Any]]:
    """Create batches from a list of items."""
    if not items: return []
    if not isinstance(items, list):
        logger.warning(f"create_batches expected a list, got {type(items)}. Returning empty list.")
        return []
    if batch_size <= 0:
        logger.warning(f"Invalid batch_size {batch_size}, using default from settings.")
        batch_size = settings.BATCH_SIZE
    return [items[i:i + batch_size] for i in range(0, len(items), batch_size)]

def group_by_parent_category(
    results: Dict[str, Dict],
    parent_level: int,
    vendors_to_group_names: List[str]
) -> Dict[Optional[str], List[str]]:
    """
    Group a specific list of vendor names based on their classification result at the parent_level.
    Only includes vendors that were successfully classified with a valid ID at the parent level.
    Returns a dictionary mapping parent category ID to a list of vendor *names*.
    """
    grouped: Dict[Optional[str], List[str]] = {}
    parent_key = f"level{parent_level}"
    logger.debug(f"group_by_parent_category: Grouping {len(vendors_to_group_names)} vendors based on results from '{parent_key}'.")

    grouped_count = 0
    excluded_count = 0

    for vendor_name in vendors_to_group_names:
        vendor_results = results.get(vendor_name)
        level_result = None
        if vendor_results is not None:
            level_result = vendor_results.get(parent_key)
        else:
            logger.warning(f"group_by_parent_category: Vendor '{vendor_name}' not found in results dictionary.")
            excluded_count += 1
            continue

        if level_result and isinstance(level_result, dict) and not level_result.get("classification_not_possible", True):
            category_id = level_result.get("category_id")
            if category_id and category_id not in ["N/A", "ERROR"]:
                if category_id not in grouped:
                    grouped[category_id] = []
                grouped[category_id].append(vendor_name)
                grouped_count += 1
                logger.debug(f"  Grouping vendor '{vendor_name}' under parent '{category_id}'.")
            else:
                logger.debug(f"  Excluding vendor '{vendor_name}': classified at '{parent_key}' but has invalid category_id '{category_id}'.")
                excluded_count += 1
        else:
            reason = "Not processed"
            if level_result and isinstance(level_result, dict):
                reason = level_result.get('classification_not_possible_reason', 'Marked not possible')
            elif not level_result:
                    reason = f"No result found for {parent_key}"
            logger.info(f"  Excluding vendor '{vendor_name}' from Level {parent_level + 1}: not successfully classified at '{parent_key}'. Reason: {reason}.")
            excluded_count += 1

    logger.info(f"group_by_parent_category: Finished grouping for Level {parent_level + 1}. Created {len(grouped)} groups, included {grouped_count} vendors, excluded {excluded_count} vendors.")
    return grouped

# --- Core Processing Logic (Moved from classification_tasks.py) ---

@log_function_call(logger, include_args=False) # Keep args=False
async def process_batch(
    batch_data: List[Dict[str, Any]], # Pass list of dicts including optional fields
    level: int,
    parent_category_id: Optional[str],
    taxonomy: Taxonomy,
    llm_service: LLMService,
    stats: Dict[str, Any],
    search_context: Optional[Dict[str, Any]] = None # ADDED: Optional search context
) -> Dict[str, Dict]:
    """
    Process a batch of vendors for a specific classification level (1-5), including taxonomy validation.
    Optionally uses search context for post-search classification attempts.
    Updates stats dictionary in place. Passes full vendor data and context to LLM.
    Returns results for the batch.
    """
    results = {}
    if not batch_data:
        logger.warning(f"process_batch called with empty batch_data for Level {level}, Parent '{parent_category_id}'.")
        return results

    batch_names = [vd.get('vendor_name', f'Unknown_{i}') for i, vd in enumerate(batch_data)] # For logging
    context_type = "Search Context" if search_context else "Initial Data"

    logger.info(f"process_batch: Starting Level {level} batch using {context_type}.",
                extra={"batch_size": len(batch_data), "parent_category_id": parent_category_id, "first_vendor": batch_names[0] if batch_names else 'N/A'})

    # --- Get valid category IDs for this level/parent (Updated for L5) ---
    valid_category_ids: Set[str] = set()
    category_id_lookup_error = False
    try:
        logger.debug(f"process_batch: Retrieving valid category IDs for Level {level}, Parent '{parent_category_id}'.")
        categories = []
        if level == 1:
            categories = taxonomy.get_level1_categories()
        elif parent_category_id:
            if level == 2:
                categories = taxonomy.get_level2_categories(parent_category_id)
            elif level == 3:
                categories = taxonomy.get_level3_categories(parent_category_id)
            elif level == 4:
                categories = taxonomy.get_level4_categories(parent_category_id)
            elif level == 5:
                categories = taxonomy.get_level5_categories(parent_category_id)
            else:
                    logger.error(f"process_batch: Invalid level {level} requested.")
                    categories = [] # Should not happen
        else: # level > 1 and no parent_category_id
                logger.error(f"process_batch: Parent category ID is required for Level {level} but was not provided.")
                categories = []

        valid_category_ids = {cat.id for cat in categories}

        if not valid_category_ids:
                if level > 1 and parent_category_id:
                    logger.warning(f"process_batch: No valid child categories found or retrieved for Level {level}, Parent '{parent_category_id}'. LLM cannot classify.")
                elif level == 1:
                    logger.error("process_batch: No Level 1 categories found in taxonomy!")
                    category_id_lookup_error = True
        else:
                logger.debug(f"process_batch: Found {len(valid_category_ids)} valid IDs for Level {level}, Parent '{parent_category_id}'. Example: {list(valid_category_ids)[:5]}")

    except Exception as tax_err:
        logger.error(f"process_batch: Error getting valid categories from taxonomy", exc_info=True,
                        extra={"level": level, "parent_category_id": parent_category_id})
        valid_category_ids = set()
        category_id_lookup_error = True

    # --- Call LLM ---
    llm_response_data = None
    try:
        logger.info(f"process_batch: Calling LLM for Level {level}, Parent '{parent_category_id or 'None'}', Context: {context_type}")
        with LogTimer(logger, f"LLM classification - Level {level}, Parent '{parent_category_id or 'None'}' ({context_type})", include_in_stats=True):
            llm_response_data = await llm_service.classify_batch(
                batch_data=batch_data,
                level=level,
                taxonomy=taxonomy,
                parent_category_id=parent_category_id,
                search_context=search_context
            )
        logger.info(f"process_batch: LLM call completed for Level {level}, Parent '{parent_category_id or 'None'}'.")

        if llm_response_data and isinstance(llm_response_data.get("usage"), dict):
            usage = llm_response_data["usage"]
            stats["api_usage"]["openrouter_calls"] += 1
            stats["api_usage"]["openrouter_prompt_tokens"] += usage.get("prompt_tokens", 0)
            stats["api_usage"]["openrouter_completion_tokens"] += usage.get("completion_tokens", 0)
            stats["api_usage"]["openrouter_total_tokens"] += usage.get("total_tokens", 0)
            logger.debug(f"process_batch: LLM API usage updated", extra=usage)
        else:
            logger.warning("process_batch: LLM response missing or has invalid usage data.")

        if llm_response_data is None:
                logger.error("process_batch: Received None response from llm_service.classify_batch. Cannot process results.")
                raise ValueError("LLM service returned None, indicating a failure in the call.")

        llm_result = llm_response_data.get("result", {})
        classifications = llm_result.get("classifications", [])
        if not isinstance(classifications, list):
                logger.warning("LLM response 'classifications' is not a list.", extra={"response_preview": str(llm_result)[:500]})
                classifications = []

        logger.debug(f"process_batch: Received {len(classifications)} classifications from LLM for batch size {len(batch_data)} at Level {level}.")
        if llm_result.get("batch_id_mismatch"):
                logger.warning(f"process_batch: Processing batch despite batch_id mismatch warning from LLM service.")

        # --- Validate and process results ---
        processed_vendors_in_response = set()
        for classification in classifications:
            if not isinstance(classification, dict):
                logger.warning("Invalid classification item format received from LLM (not a dict)", extra={"item": classification})
                continue

            vendor_name = classification.get("vendor_name")
            if not vendor_name:
                logger.warning("Classification received without vendor_name", extra={"classification": classification})
                continue

            target_vendor_name = vendor_name
            processed_vendors_in_response.add(target_vendor_name)

            category_id = classification.get("category_id", "N/A")
            category_name = classification.get("category_name", "N/A")
            confidence = classification.get("confidence", 0.0)
            classification_not_possible = classification.get("classification_not_possible", False)
            reason = classification.get("classification_not_possible_reason")
            notes = classification.get("notes")
            is_valid_category = True

            # --- TAXONOMY VALIDATION ---
            if not classification_not_possible and not category_id_lookup_error and valid_category_ids:
                if category_id not in valid_category_ids:
                    is_valid_category = False
                    logger.warning(f"Invalid category ID '{category_id}' returned by LLM for vendor '{target_vendor_name}' at level {level}, parent '{parent_category_id}'.",
                                    extra={"valid_ids": list(valid_category_ids)[:10]})
                    classification_not_possible = True
                    reason = f"Invalid category ID '{category_id}' returned by LLM (Valid examples: {list(valid_category_ids)[:3]})"
                    confidence = 0.0
                    category_id = "N/A"
                    category_name = "N/A"
                    stats["invalid_category_errors"] = stats.get("invalid_category_errors", 0) + 1
                else:
                        logger.debug(f"Category ID '{category_id}' for '{target_vendor_name}' is valid for Level {level}, Parent '{parent_category_id}'.")
            elif not classification_not_possible and category_id_lookup_error:
                    logger.warning(f"Cannot validate category ID '{category_id}' for '{target_vendor_name}' due to earlier taxonomy lookup error.")
            elif not classification_not_possible and not valid_category_ids and level > 1:
                    logger.warning(f"Cannot validate category ID '{category_id}' for '{target_vendor_name}' because no valid child categories were found for parent '{parent_category_id}'.")
                    is_valid_category = False
                    classification_not_possible = True
                    reason = f"LLM returned category '{category_id}' but no valid children found for parent '{parent_category_id}'."
                    confidence = 0.0
                    category_id = "N/A"; category_name = "N/A"
                    stats["invalid_category_errors"] = stats.get("invalid_category_errors", 0) + 1
            # --- End TAXONOMY VALIDATION ---

            # --- Consistency Checks ---
            if classification_not_possible and confidence > 0.0:
                logger.warning("Correcting confidence to 0.0 for classification_not_possible=true", extra={"vendor": target_vendor_name})
                confidence = 0.0
            if not classification_not_possible and is_valid_category and (category_id == "N/A" or not category_id):
                    logger.warning("Classification marked possible by LLM but category ID is 'N/A' or empty", extra={"vendor": target_vendor_name, "classification": classification})
                    classification_not_possible = True
                    reason = reason or "Missing category ID despite LLM success claim"
                    confidence = 0.0
                    category_id = "N/A"
                    category_name = "N/A"
            # --- End Consistency Checks ---

            results[target_vendor_name] = {
                "category_id": category_id,
                "category_name": category_name,
                "confidence": confidence,
                "classification_not_possible": classification_not_possible,
                "classification_not_possible_reason": reason,
                "notes": notes,
                "vendor_name": target_vendor_name
            }
            logger.debug(f"process_batch: Processed result for '{target_vendor_name}' at Level {level}. Possible: {not classification_not_possible}, ID: {category_id}")

        # Handle missing vendors from batch
        missing_vendors = set(batch_names) - processed_vendors_in_response
        if missing_vendors:
            logger.warning(f"LLM response did not include results for all vendors in the batch.", extra={"missing_vendors": list(missing_vendors), "level": level})
            for vendor_name in missing_vendors:
                results[vendor_name] = {
                    "category_id": "N/A", "category_name": "N/A", "confidence": 0.0,
                    "classification_not_possible": True,
                    "classification_not_possible_reason": "Vendor missing from LLM response batch",
                    "notes": None,
                    "vendor_name": vendor_name
                }

    except Exception as e:
        logger.error(f"Failed to process batch at Level {level} ({context_type})", exc_info=True,
                        extra={"batch_names": batch_names, "error": str(e)})
        for vendor_name in batch_names:
            results[vendor_name] = {
                "category_id": "ERROR", "category_name": "ERROR", "confidence": 0.0,
                "classification_not_possible": True,
                "classification_not_possible_reason": f"Batch processing error: {str(e)[:100]}",
                "notes": None,
                "vendor_name": vendor_name
            }
    logger.info(f"process_batch: Finished Level {level} batch for parent '{parent_category_id or 'None'}'. Returning {len(results)} results.")
    return results


@log_function_call(logger, include_args=False)
async def search_and_classify_recursively(
    vendor_data: Dict[str, Any],
    taxonomy: Taxonomy,
    llm_service: LLMService,
    search_service: SearchService,
    stats: Dict[str, Any],
    semaphore: asyncio.Semaphore,
    target_level: int # <<< ADDED target_level
) -> Dict[str, Any]:
    """
    Performs Tavily search, attempts L1 classification, and then recursively
    attempts L2 up to target_level classification using the search context.
    Controlled by semaphore.
    Returns the search_result_data dictionary, potentially augmented with
    classification results (keyed as classification_l1, classification_l2, etc.).
    """
    vendor_name = vendor_data.get('vendor_name', 'UnknownVendor')
    logger.debug(f"search_and_classify_recursively: Waiting to acquire semaphore for vendor '{vendor_name}'.")
    async with semaphore: # Limit concurrency
        logger.info(f"search_and_classify_recursively: Acquired semaphore. Starting for vendor '{vendor_name}' up to Level {target_level}.")
        search_result_data = {
            "vendor": vendor_name,
            "search_query": f"{vendor_name} company business type industry",
            "sources": [],
            "summary": None,
            "error": None,
            # Keys for storing classification results obtained via search
            "classification_l1": None,
            "classification_l2": None,
            "classification_l3": None,
            "classification_l4": None,
            "classification_l5": None
            }

        # --- 1. Perform Tavily Search ---
        try:
            logger.debug(f"search_and_classify_recursively: Calling search_service.search_vendor for '{vendor_name}'.")
            with LogTimer(logger, f"Tavily search for '{vendor_name}'", include_in_stats=True):
                tavily_response = await search_service.search_vendor(vendor_name)
            logger.debug(f"search_and_classify_recursively: search_service.search_vendor returned for '{vendor_name}'.")

            stats["api_usage"]["tavily_search_calls"] += 1
            search_result_data.update(tavily_response) # Update with actual search results or error

            source_count = len(search_result_data.get("sources", []))
            if search_result_data.get("error"):
                logger.warning(f"search_and_classify_recursively: Search failed", extra={"vendor": vendor_name, "error": search_result_data["error"]})
                search_result_data["classification_l1"] = {
                        "classification_not_possible": True,
                        "classification_not_possible_reason": f"Search error: {str(search_result_data['error'])[:100]}",
                        "confidence": 0.0, "vendor_name": vendor_name, "notes": "Search Failed"
                }
                logger.debug(f"search_and_classify_recursively: Releasing semaphore early due to search error for '{vendor_name}'.")
                return search_result_data # Stop if search failed
            else:
                logger.info(f"search_and_classify_recursively: Search completed", extra={"vendor": vendor_name, "source_count": source_count, "summary_present": bool(search_result_data.get('summary'))})

        except Exception as search_exc:
            logger.error(f"search_and_classify_recursively: Unexpected error during Tavily search for {vendor_name}", exc_info=True)
            search_result_data["error"] = f"Unexpected search error: {str(search_exc)}"
            search_result_data["classification_l1"] = {
                    "classification_not_possible": True,
                    "classification_not_possible_reason": f"Search task error: {str(search_exc)[:100]}",
                    "confidence": 0.0, "vendor_name": vendor_name, "notes": "Search Failed"
                }
            logger.debug(f"search_and_classify_recursively: Releasing semaphore early due to search exception for '{vendor_name}'.")
            return search_result_data # Stop if search failed

        # --- 2. Attempt L1 Classification using Search Results ---
        search_content_available = search_result_data.get("sources") or search_result_data.get("summary")
        if not search_content_available:
            logger.warning(f"search_and_classify_recursively: No usable search results found for vendor, cannot classify", extra={"vendor": vendor_name})
            search_result_data["classification_l1"] = {
                    "classification_not_possible": True,
                    "classification_not_possible_reason": "No search results content found",
                    "confidence": 0.0, "vendor_name": vendor_name, "notes": "No Search Content"
            }
            logger.debug(f"search_and_classify_recursively: Releasing semaphore early due to no search content for '{vendor_name}'.")
            return search_result_data # Stop if no content

        valid_l1_category_ids: Set[str] = set(taxonomy.categories.keys())
        llm_response_l1 = None
        try:
            logger.debug(f"search_and_classify_recursively: Calling llm_service.process_search_results (L1) for '{vendor_name}'.")
            with LogTimer(logger, f"LLM L1 classification from search for '{vendor_name}'", include_in_stats=True):
                llm_response_l1 = await llm_service.process_search_results(vendor_data, search_result_data, taxonomy)
            logger.debug(f"search_and_classify_recursively: llm_service.process_search_results (L1) returned for '{vendor_name}'.")

            if llm_response_l1 is None:
                    logger.error("search_and_classify_recursively: Received None response from llm_service.process_search_results. Cannot process L1.")
                    raise ValueError("LLM service (process_search_results) returned None.")

            if isinstance(llm_response_l1.get("usage"), dict):
                usage = llm_response_l1["usage"]
                stats["api_usage"]["openrouter_calls"] += 1
                stats["api_usage"]["openrouter_prompt_tokens"] += usage.get("prompt_tokens", 0)
                stats["api_usage"]["openrouter_completion_tokens"] += usage.get("completion_tokens", 0)
                stats["api_usage"]["openrouter_total_tokens"] += usage.get("total_tokens", 0)

            l1_classification = llm_response_l1.get("result", {})
            if "vendor_name" not in l1_classification: l1_classification["vendor_name"] = vendor_name

            # Validate L1 result
            classification_not_possible_l1 = l1_classification.get("classification_not_possible", True)
            category_id_l1 = l1_classification.get("category_id", "N/A")
            is_valid_l1 = True

            if not classification_not_possible_l1 and valid_l1_category_ids:
                if category_id_l1 not in valid_l1_category_ids:
                    is_valid_l1 = False
                    logger.warning(f"Invalid L1 category ID '{category_id_l1}' from search LLM for '{vendor_name}'.", extra={"valid_ids": list(valid_l1_category_ids)[:10]})
                    l1_classification["classification_not_possible"] = True
                    l1_classification["classification_not_possible_reason"] = f"Invalid L1 category ID '{category_id_l1}' from search."
                    l1_classification["confidence"] = 0.0
                    l1_classification["category_id"] = "N/A"
                    l1_classification["category_name"] = "N/A"
                    stats["invalid_category_errors"] = stats.get("invalid_category_errors", 0) + 1

            if l1_classification.get("classification_not_possible") and l1_classification.get("confidence", 0.0) > 0.0: l1_classification["confidence"] = 0.0
            if not l1_classification.get("classification_not_possible") and not l1_classification.get("category_id", "N/A"):
                    l1_classification["classification_not_possible"] = True
                    l1_classification["classification_not_possible_reason"] = "Missing L1 category ID despite LLM success claim"
                    l1_classification["confidence"] = 0.0
                    l1_classification["category_id"] = "N/A"; l1_classification["category_name"] = "N/A"

            search_result_data["classification_l1"] = l1_classification # Store validated L1 result

        except Exception as llm_err:
                logger.error(f"search_and_classify_recursively: Error during LLM L1 processing for {vendor_name}", exc_info=True)
                search_result_data["error"] = search_result_data.get("error") or f"LLM L1 processing error: {str(llm_err)}"
                search_result_data["classification_l1"] = {
                    "classification_not_possible": True,
                    "classification_not_possible_reason": f"LLM L1 processing error: {str(llm_err)[:100]}",
                    "confidence": 0.0, "vendor_name": vendor_name, "notes": "LLM L1 Error"
                }
                logger.debug(f"search_and_classify_recursively: Releasing semaphore early due to L1 LLM exception for '{vendor_name}'.")
                return search_result_data # Stop if L1 classification failed

        # --- 3. Recursive Classification L2 up to target_level using Search Context ---
        current_parent_id = search_result_data["classification_l1"].get("category_id")
        classification_possible = not search_result_data["classification_l1"].get("classification_not_possible", True)

        # --- UPDATED: Loop up to target_level ---
        if classification_possible and current_parent_id and current_parent_id != "N/A" and target_level > 1:
            logger.info(f"search_and_classify_recursively: L1 successful ({current_parent_id}), proceeding to L2-{target_level} for {vendor_name} using search context.")
            for level in range(2, target_level + 1):
        # --- END UPDATED ---
                logger.debug(f"Attempting post-search Level {level} for {vendor_name}, parent {current_parent_id}")
                try:
                    logger.debug(f"search_and_classify_recursively: Calling process_batch (Level {level}) for '{vendor_name}' with search context.")
                    batch_result_dict = await process_batch(
                        batch_data=[vendor_data], # Batch of one
                        level=level,
                        parent_category_id=current_parent_id,
                        taxonomy=taxonomy,
                        llm_service=llm_service,
                        stats=stats,
                        search_context=search_result_data # Pass the full search results as context
                    )
                    logger.debug(f"search_and_classify_recursively: process_batch (Level {level}) returned for '{vendor_name}'.")

                    level_result = batch_result_dict.get(vendor_name)
                    if level_result:
                        search_result_data[f"classification_l{level}"] = level_result # Store result
                        if level_result.get("classification_not_possible", True):
                            logger.info(f"Post-search classification stopped at Level {level} for {vendor_name}. Reason: {level_result.get('classification_not_possible_reason')}")
                            break # Stop recursion if classification fails
                        else:
                            current_parent_id = level_result.get("category_id") # Update parent for next level
                            if not current_parent_id or current_parent_id == "N/A":
                                logger.warning(f"Post-search Level {level} successful but returned invalid parent_id '{current_parent_id}' for {vendor_name}. Stopping recursion.")
                                break
                    else:
                        logger.error(f"Post-search Level {level} batch processing did not return result for {vendor_name}. Stopping recursion.")
                        search_result_data[f"classification_l{level}"] = {
                                "classification_not_possible": True,
                                "classification_not_possible_reason": f"Missing result from L{level} post-search batch",
                                "confidence": 0.0, "vendor_name": vendor_name, "notes": f"L{level} Error"
                        }
                        break

                except Exception as recursive_err:
                    logger.error(f"search_and_classify_recursively: Error during post-search Level {level} for {vendor_name}", exc_info=True)
                    search_result_data[f"classification_l{level}"] = {
                            "classification_not_possible": True,
                            "classification_not_possible_reason": f"L{level} processing error: {str(recursive_err)[:100]}",
                            "confidence": 0.0, "vendor_name": vendor_name, "notes": f"L{level} Error"
                    }
                    break # Stop recursion on error
        else:
            logger.info(f"search_and_classify_recursively: L1 classification failed or not possible for {vendor_name}, or target level is 1. Skipping L2-{target_level}.")

        logger.info(f"search_and_classify_recursively: Finished for vendor", extra={"vendor": vendor_name})
        logger.debug(f"search_and_classify_recursively: Releasing semaphore for vendor '{vendor_name}'.")
        return search_result_data


@log_function_call(logger, include_args=False) # Keep args=False
async def process_vendors(
    unique_vendors_map: Dict[str, Dict[str, Any]], # Pass map containing full vendor data
    taxonomy: Taxonomy,
    results: Dict[str, Dict],
    stats: Dict[str, Any],
    job: Job,
    db: Session,
    llm_service: LLMService,
    search_service: SearchService,
    target_level: int # <<< ADDED target_level
):
    """
    Main orchestration function for processing vendors through the classification workflow (up to target_level),
    including recursive search for unknowns (up to target_level). Updates results and stats dictionaries in place.
    """
    unique_vendor_names = list(unique_vendors_map.keys()) # Get names from map
    total_unique_vendors = len(unique_vendor_names)
    processed_count = 0 # Count unique vendors processed in batches

    logger.info(f"Starting classification loop for {total_unique_vendors} unique vendors up to target Level {target_level}.")

    # --- Initial Hierarchical Classification (Levels 1 to target_level) ---
    vendors_to_process_next_level_names = set(unique_vendor_names) # Start with all unique vendor names for Level 1
    initial_l4_success_count = 0 # Track L4 for stats
    initial_l5_success_count = 0 # Track L5 for stats

    # --- UPDATED: Loop up to target_level ---
    for level in range(1, target_level + 1):
    # --- END UPDATED ---
        if not vendors_to_process_next_level_names:
            logger.info(f"No vendors remaining to process for Level {level}. Skipping.")
            continue # Skip level if no vendors need processing

        current_vendors_for_this_level = list(vendors_to_process_next_level_names) # Copy names for processing this level
        vendors_successfully_classified_in_level_names = set() # Track vendors that pass this level

        stage_enum_name = f"CLASSIFICATION_L{level}"
        if hasattr(ProcessingStage, stage_enum_name):
                job.current_stage = getattr(ProcessingStage, stage_enum_name).value
        else:
                logger.error(f"ProcessingStage enum does not have member '{stage_enum_name}'. Using default.")
                job.current_stage = ProcessingStage.PROCESSING.value # Fallback

        # Adjust progress calculation based on target_level (distribute 0.7 across target_level steps)
        progress_per_level = 0.7 / target_level if target_level > 0 else 0.7
        job.progress = min(0.8, 0.1 + ((level - 1) * progress_per_level))
        logger.info(f"[process_vendors] Committing status update before Level {level}: {job.status}, {job.current_stage}, {job.progress:.3f}")
        db.commit()
        logger.info(f"===== Starting Initial Level {level} Classification =====",
                    extra={ "vendors_to_process": len(current_vendors_for_this_level), "progress": job.progress })

        if level == 1:
            grouped_vendors_names = { None: current_vendors_for_this_level }
            logger.info(f"Level 1: Processing all {len(current_vendors_for_this_level)} vendors.")
        else:
            logger.info(f"Level {level}: Grouping {len(current_vendors_for_this_level)} vendors based on Level {level-1} results.")
            grouped_vendors_names = group_by_parent_category(results, level - 1, current_vendors_for_this_level)
            logger.info(f"Level {level}: Created {len(grouped_vendors_names)} groups for processing.")
            for parent_id, names in grouped_vendors_names.items():
                    logger.debug(f"  Group Parent ID '{parent_id}': {len(names)} vendors")

        processed_in_level_count = 0
        batch_counter_for_level = 0
        total_batches_for_level = sum( (len(names) + settings.BATCH_SIZE - 1) // settings.BATCH_SIZE for names in grouped_vendors_names.values() )
        logger.info(f"Level {level}: Total batches to process: {total_batches_for_level}")

        for parent_category_id, group_vendor_names in grouped_vendors_names.items():
            if not group_vendor_names:
                logger.debug(f"Skipping empty group for parent '{parent_category_id}' at Level {level}.")
                continue

            logger.info(f"Processing Level {level} group",
                        extra={"parent_category_id": parent_category_id, "vendor_count": len(group_vendor_names)})

            group_vendor_data = [unique_vendors_map[name] for name in group_vendor_names if name in unique_vendors_map]
            level_batches_data = create_batches(group_vendor_data, batch_size=settings.BATCH_SIZE)
            logger.debug(f"Created {len(level_batches_data)} batches for group '{parent_category_id}' at Level {level}.")

            for i, batch_data in enumerate(level_batches_data):
                batch_counter_for_level += 1
                batch_names = [vd['vendor_name'] for vd in batch_data] # Get names for logging
                logger.info(f"Processing Level {level} batch {i+1}/{len(level_batches_data)} for parent '{parent_category_id or 'None'}'",
                            extra={"batch_size": len(batch_data), "first_vendor": batch_names[0] if batch_names else 'N/A', "batch_num": batch_counter_for_level, "total_batches": total_batches_for_level})
                try:
                    # Process batch WITHOUT search context initially
                    batch_results = await process_batch(batch_data, level, parent_category_id, taxonomy, llm_service, stats, search_context=None)
                    logger.debug(f"Level {level} batch {i+1} results received. Count: {len(batch_results)}.")

                    for vendor_name, classification in batch_results.items():
                        if vendor_name in results:
                            results[vendor_name][f"level{level}"] = classification
                            processed_in_level_count += 1

                            if not classification.get("classification_not_possible", True):
                                vendors_successfully_classified_in_level_names.add(vendor_name)
                                logger.debug(f"Vendor '{vendor_name}' successfully classified at Level {level} (ID: {classification.get('category_id')}). Added for L{level+1}.")
                                # Update stats based on the actual level completed
                                if level == 4:
                                    initial_l4_success_count += 1
                                    logger.debug(f"Incremented initial_l4_success_count for {vendor_name}. Current L4 count: {initial_l4_success_count}")
                                if level == 5:
                                    initial_l5_success_count += 1
                                    logger.debug(f"Incremented initial_l5_success_count for {vendor_name}. Current L5 count: {initial_l5_success_count}")
                            else:
                                logger.debug(f"Vendor '{vendor_name}' not successfully classified at Level {level}. Reason: {classification.get('classification_not_possible_reason', 'Unknown')}. Will not proceed.")
                        else:
                                logger.warning(f"Vendor '{vendor_name}' from batch result not found in main results dictionary.", extra={"level": level})

                except Exception as batch_error:
                    logger.error(f"Error during initial batch processing logic (Level {level}, parent '{parent_category_id or 'None'}')", exc_info=True,
                                    extra={"batch_vendors": batch_names, "error": str(batch_error)})
                    for vendor_name in batch_names:
                            if vendor_name in results:
                                if f"level{level}" not in results[vendor_name]:
                                    results[vendor_name][f"level{level}"] = {
                                        "category_id": "ERROR", "category_name": "ERROR", "confidence": 0.0,
                                        "classification_not_possible": True,
                                        "classification_not_possible_reason": f"Batch processing logic error: {str(batch_error)[:100]}",
                                        "vendor_name": vendor_name
                                    }
                                    processed_in_level_count += 1
                                else: 
                                    logger.warning(f"Vendor '{vendor_name}' from failed batch not found in main results dictionary.", extra={"level": level})

                # Update progress within the level (based on batches completed)
                level_progress_fraction = batch_counter_for_level / total_batches_for_level if total_batches_for_level > 0 else 1
                job.progress = min(0.8, 0.1 + ((level - 1) * progress_per_level) + (progress_per_level * level_progress_fraction))
                try:
                    logger.info(f"[process_vendors] Committing progress update after batch {batch_counter_for_level}/{total_batches_for_level} (Level {level}): {job.progress:.3f}")
                    db.commit()
                except Exception as db_err:
                        logger.error("Failed to commit progress update during batch processing", exc_info=True)
                        db.rollback()

        logger.info(f"===== Initial Level {level} Classification Completed =====")
        logger.info(f"  Processed {processed_in_level_count} vendor results at Level {level}.")
        logger.info(f"  {len(vendors_successfully_classified_in_level_names)} vendors successfully classified and validated at Level {level}, proceeding to L{level+1}.")
        logger.debug(f"Vendors proceeding to Level {level+1}: {list(vendors_successfully_classified_in_level_names)[:10]}...") # Log first 10
        vendors_to_process_next_level_names = vendors_successfully_classified_in_level_names

    # --- End of Initial Level Loop ---
    logger.info(f"===== Finished Initial Hierarchical Classification Loop (Up to Level {target_level}) =====")

    # --- Identify vendors needing search (those not successfully classified at target_level) ---
    unknown_vendors_data_to_search = []
    for vendor_name in unique_vendor_names:
        is_classified_target = False
        if vendor_name in results:
            target_level_result = results[vendor_name].get(f"level{target_level}")
            if target_level_result and not target_level_result.get("classification_not_possible", False):
                    is_classified_target = True

        if not is_classified_target:
            logger.debug(f"Vendor '{vendor_name}' did not initially reach/pass target Level {target_level} classification. Adding to search list.")
            if vendor_name in unique_vendors_map:
                unknown_vendors_data_to_search.append(unique_vendors_map[vendor_name])
            else:
                logger.warning(f"Vendor '{vendor_name}' marked for search but not found in unique_vendors_map.")
                unknown_vendors_data_to_search.append({'vendor_name': vendor_name})

    stats["classification_not_possible_initial"] = len(unknown_vendors_data_to_search)
    stats["successfully_classified_l4"] = initial_l4_success_count # Store initial L4 count
    stats["successfully_classified_l5"] = initial_l5_success_count # Store initial L5 count

    logger.info(f"Initial Classification Summary (Target L{target_level}): {total_unique_vendors - stats['classification_not_possible_initial']} reached target, {stats['classification_not_possible_initial']} did not.")
    if target_level >= 4: logger.info(f"  Ref: {initial_l4_success_count} reached L4 initially.")
    if target_level >= 5: logger.info(f"  Ref: {initial_l5_success_count} reached L5 initially.")

    # --- Search and Recursive Classification for Unknown Vendors (up to target_level) ---
    if unknown_vendors_data_to_search:
        job.current_stage = ProcessingStage.SEARCH.value
        job.progress = 0.8 # Progress after initial classification attempts
        logger.info(f"[process_vendors] Committing status update before Search stage: {job.status}, {job.current_stage}, {job.progress}")
        db.commit()
        logger.info(f"===== Starting Search and Recursive Classification for {stats['classification_not_possible_initial']} Unclassified Vendors (Up to Level {target_level}) =====")

        stats["search_attempts"] = len(unknown_vendors_data_to_search)

        search_tasks = []
        if MAX_CONCURRENT_SEARCHES <= 0:
            logger.error(f"MAX_CONCURRENT_SEARCHES is {MAX_CONCURRENT_SEARCHES}. Cannot proceed with search tasks.")
            raise ValueError("MAX_CONCURRENT_SEARCHES must be positive.")
        search_semaphore = asyncio.Semaphore(MAX_CONCURRENT_SEARCHES)
        logger.info(f"Created search semaphore with concurrency limit: {MAX_CONCURRENT_SEARCHES}")

        for vendor_data in unknown_vendors_data_to_search:
            task = asyncio.create_task(
                search_and_classify_recursively(
                    vendor_data, taxonomy, llm_service, search_service, stats, search_semaphore, target_level # Pass target_level
                )
            )
            search_tasks.append(task)

        logger.info(f"Gathering results for {len(search_tasks)} search & recursive classification tasks...")
        logger.debug(f"Starting asyncio.gather for {len(search_tasks)} tasks.")
        gather_start_time = time.monotonic()
        search_and_recursive_results = await asyncio.gather(*search_tasks, return_exceptions=True)
        gather_duration = time.monotonic() - gather_start_time
        logger.info(f"Search & recursive classification tasks completed (asyncio.gather finished). Duration: {gather_duration:.3f}s")

        job.progress = 0.95 # Indicate search phase is done, before result processing/generation
        logger.info(f"[process_vendors] Committing progress update after search gather: {job.progress:.3f}")
        db.commit()

        successful_l1_searches = 0
        successful_l5_searches = 0 # Track L5 success via search
        processed_search_count = 0

        logger.info(f"Processing {len(search_and_recursive_results)} results from search/recursive tasks.")
        for i, result_or_exc in enumerate(search_and_recursive_results):
            processed_search_count += 1
            if i >= len(unknown_vendors_data_to_search):
                    logger.error(f"Search result index {i} out of bounds for unknown_vendors list.")
                    continue
            vendor_data = unknown_vendors_data_to_search[i]
            vendor_name = vendor_data.get('vendor_name', f'UnknownVendor_{i}')

            if vendor_name not in results:
                    logger.warning(f"Vendor '{vendor_name}' from search task not found in main results dict. Initializing.")
                    results[vendor_name] = {}

            results[vendor_name]["search_attempted"] = True # Add flag

            if isinstance(result_or_exc, Exception):
                logger.error(f"Error during search_and_classify_recursively for vendor {vendor_name}", exc_info=result_or_exc)
                results[vendor_name]["search_results"] = {"error": f"Search/Recursive task error: {str(result_or_exc)}"}
                if "level1" not in results[vendor_name] or results[vendor_name]["level1"].get("classification_not_possible", True):
                    results[vendor_name]["level1"] = {
                        "classification_not_possible": True,
                        "classification_not_possible_reason": f"Search task error: {str(result_or_exc)[:100]}",
                        "confidence": 0.0, "vendor_name": vendor_name, "notes": "Search Failed"
                    }
            elif isinstance(result_or_exc, dict):
                search_data = result_or_exc
                results[vendor_name]["search_results"] = search_data # Store raw search info

                l1_classification = search_data.get("classification_l1")
                if l1_classification and not l1_classification.get("classification_not_possible", True):
                    successful_l1_searches += 1
                    logger.info(f"Vendor '{vendor_name}' classified via search (Level 1: {l1_classification.get('category_id')}).")
                    results[vendor_name]["classified_via_search"] = True # Add flag

                    if not results[vendor_name].get("level1") or results[vendor_name]["level1"].get("classification_not_possible", True):
                            results[vendor_name]["level1"] = l1_classification
                            if "notes" not in results[vendor_name]["level1"]: results[vendor_name]["level1"]["notes"] = ""
                            results[vendor_name]["level1"]["notes"] = f"Classified via search: {results[vendor_name]['level1']['notes']}"

                    # Store L2-L5 results obtained recursively (up to target_level)
                    # --- UPDATED: Loop up to target_level ---
                    for lvl in range(2, target_level + 1):
                    # --- END UPDATED ---
                        lvl_key = f"classification_l{lvl}"
                        if lvl_key in search_data:
                            results[vendor_name][f"level{lvl}"] = search_data[lvl_key]
                            # Check if L5 was successfully reached post-search (only if target was >= 5)
                            if lvl == 5 and target_level >= 5 and not search_data[lvl_key].get("classification_not_possible", True):
                                successful_l5_searches += 1
                                logger.info(f"Vendor '{vendor_name}' reached L5 classification via search.")
                        else:
                            # Explicitly remove higher levels if recursion stopped early or target was lower
                            results[vendor_name].pop(f"level{lvl}", None)
                            if f"classification_l{lvl-1}" in search_data:
                                logger.debug(f"Recursion for {vendor_name} stopped before L{lvl}, likely due to L{lvl-1} failure or no children.")

                else: # L1 classification via search failed or wasn't possible
                    reason = "Search did not yield L1 classification"
                    if l1_classification: reason = l1_classification.get("classification_not_possible_reason", reason)
                    logger.info(f"Vendor '{vendor_name}' could not be classified via search at L1. Reason: {reason}")
                    if not results[vendor_name].get("level1") or results[vendor_name]["level1"].get("classification_not_possible", True):
                        results[vendor_name]["level1"] = {
                            "classification_not_possible": True,
                            "classification_not_possible_reason": reason,
                            "confidence": 0.0, "vendor_name": vendor_name, "notes": "Search Failed L1"
                        }
                    # --- UPDATED: Loop up to target_level ---
                    for lvl in range(2, target_level + 1): results[vendor_name].pop(f"level{lvl}", None)
                    # --- END UPDATED ---

            else: # Handle unexpected return type
                logger.error(f"Unexpected result type for vendor {vendor_name} search task: {type(result_or_exc)}")
                results[vendor_name]["search_results"] = {"error": f"Unexpected search result type: {type(result_or_exc)}"}
                if "level1" not in results[vendor_name] or results[vendor_name]["level1"].get("classification_not_possible", True):
                        results[vendor_name]["level1"] = { "classification_not_possible": True, "classification_not_possible_reason": "Internal search error", "confidence": 0.0, "vendor_name": vendor_name, "notes": "Search Error" }
                # --- UPDATED: Loop up to target_level ---
                for lvl in range(2, target_level + 1): results[vendor_name].pop(f"level{lvl}", None)
                # --- END UPDATED ---

        stats["search_successful_classifications_l1"] = successful_l1_searches
        stats["search_successful_classifications_l5"] = successful_l5_searches # Updated stat
        # Update total L5 success count (if target was >= 5)
        if target_level >= 5:
            stats["successfully_classified_l5"] = initial_l5_success_count + successful_l5_searches

        logger.info(f"===== Unknown Vendor Search & Recursive Classification Completed =====")
        logger.info(f"  Attempted search for {stats['search_attempts']} vendors.")
        logger.info(f"  Successfully classified {successful_l1_searches} at L1 via search.")
        if target_level >= 5:
            logger.info(f"  Successfully classified {successful_l5_searches} at L5 via search.")
            logger.info(f"  Total vendors successfully classified at L5: {stats['successfully_classified_l5']}")
    else:
        logger.info("No unknown vendors required search.")
        job.progress = 0.95 # Set progress high if search wasn't needed
        logger.info(f"[process_vendors] Committing status update as search was skipped: {job.progress:.3f}")
        db.commit()
    logger.info("process_vendors function is returning.")
</file>

<file path='frontend/vue_frontend/src/components/JobStats.vue'>
<template>
    <div class="mt-6 bg-gray-50 rounded-lg p-6 border border-gray-200 shadow-inner">
      <h5 class="text-lg font-semibold text-gray-700 mb-5 border-b border-gray-200 pb-3">
          Processing Statistics
      </h5>
      <div v-if="isLoading" class="text-center text-gray-500 py-4">
            <svg class="animate-spin inline-block h-5 w-5 text-primary mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
               <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
               <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            <span>Loading stats...</span>
      </div>
      <div v-else-if="error" class="p-3 bg-yellow-100 border border-yellow-300 text-yellow-800 rounded-md text-sm">
          {{ error }}
      </div>
      <div v-else-if="stats" class="grid grid-cols-1 sm:grid-cols-2 gap-x-8 gap-y-4 text-sm">
          <!-- Column 1: Vendor & Classification Stats -->
          <div class="space-y-2.5">
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Vendors Processed:</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.vendors_processed?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Unique Vendors:</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.unique_vendors?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <!-- UPDATED: Display L5 Success -->
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Successfully Classified (L5):</strong>
                  <span class="text-green-700 font-semibold">{{ stats.successfully_classified_l5?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <!-- UPDATED: Display L5 Search Success -->
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Search Assisted (L5):</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.search_assisted_l5?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <!-- Keep L4 for reference if desired -->
               <p class="flex justify-between text-xs text-gray-500">
                  <strong class="font-normal">Ref: Classified (L4):</strong>
                  <span class="font-normal">{{ stats.successfully_classified_l4?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Invalid Category Errors:</strong>
                  <span :class="(stats.invalid_category_errors ?? 0) > 0 ? 'text-red-600 font-semibold' : 'text-gray-800 font-semibold'">
                      {{ stats.invalid_category_errors?.toLocaleString() ?? 'N/A' }}
                  </span>
              </p>
          </div>
           <!-- Column 2: API & Time Stats -->
           <div class="space-y-2.5">
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">LLM API Calls:</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.api_calls?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">LLM Tokens Used:</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.tokens_used?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <p class="flex justify-between">
                  <strong class="text-gray-600 font-medium">Search API Calls:</strong>
                  <span class="text-gray-800 font-semibold">{{ stats.tavily_searches?.toLocaleString() ?? 'N/A' }}</span>
              </p>
              <p class="flex justify-between pt-2 mt-1 border-t border-gray-200">
                  <strong class="text-gray-600 font-medium">Processing Time:</strong>
                  <span class="text-gray-800 font-semibold">{{ formattedTime }}</span>
              </p>
           </div>
      </div>
       <div v-else class="text-gray-500 text-center py-4 text-sm">No statistics available for this job.</div>
    </div>
  </template>

<script setup lang="ts">
import { ref, onMounted, watch, computed } from 'vue';
// --- MODIFIED: Import JobStatsData from apiService ---
import apiService, { type JobStatsData } from '@/services/api';
// --- END MODIFIED ---

// --- REMOVED: Redundant local interface definition ---
// interface JobStatsData { ... }
// --- END REMOVED ---

// Define the component props
interface Props {
    jobId: string | null | undefined; // Allow jobId to be potentially null or undefined
}
const props = defineProps<Props>();

// Reactive state variables
const stats = ref<JobStatsData | null>(null); // Use the imported type
const isLoading = ref(false);
const error = ref<string | null>(null);

// Computed property to format processing time nicely
const formattedTime = computed(() => {
    if (stats.value?.processing_time == null) return 'N/A'; // Check for null or undefined
    const seconds = stats.value.processing_time;
    if (seconds < 0) return 'N/A'; // Handle potential negative values if they occur
    if (seconds < 1) return `${(seconds * 1000).toFixed(0)} ms`;
    if (seconds < 60) return `${seconds.toFixed(1)} seconds`;
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = (seconds % 60).toFixed(0);
    return `${minutes} min ${remainingSeconds} sec`;
});

/**
 * Fetches job statistics from the API for the given job ID.
 * @param {string | null | undefined} id - The job ID to fetch stats for.
 */
const fetchStats = async (id: string | null | undefined) => {
  // Only proceed if id is a non-empty string
  if (!id) {
      console.log("JobStats: fetchStats called with no ID, skipping."); // Logging
      stats.value = null; // Clear previous stats if ID is null/undefined
      error.value = null;
      isLoading.value = false;
      return;
  }

  isLoading.value = true;
  error.value = null;
  // Don't clear stats immediately, only on successful fetch or error
  // stats.value = null;

  try {
      console.log(`JobStats: Fetching stats for job ID: ${id}`); // Logging
      // The API service now returns the updated structure
      stats.value = await apiService.getJobStats(id);
      console.log(`JobStats: Received stats:`, JSON.parse(JSON.stringify(stats.value))); // Log a deep copy
  } catch (err: any) {
      console.error(`JobStats: Error fetching stats for ${id}:`, err); // Logging
      error.value = err.message || 'Failed to load statistics.';
      stats.value = null; // Clear stats on error
  } finally {
      isLoading.value = false;
  }
};

// Fetch stats when the component mounts
onMounted(() => {
    console.log(`JobStats: Mounted with initial jobId: ${props.jobId}`); // Logging
    fetchStats(props.jobId);
});

// Watch for changes in the jobId prop and refetch stats
watch(() => props.jobId,
  (newJobId: string | null | undefined) => {
    console.log(`JobStats: Watched jobId changed to: ${newJobId}`); // Logging
    fetchStats(newJobId); // fetchStats handles null/undefined check internally
  },
  { immediate: false } // Don't run immediately, onMounted handles initial fetch
);
</script>

<style scoped>
  .shadow-inner {
      box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  }
  /* Add any other specific styles if needed */
</style>
</file>

<file path='frontend/vue_frontend/src/services/api.ts'>
// frontend/vue_frontend/src/services/api.ts
import axios, {
    type AxiosInstance,
    type InternalAxiosRequestConfig,
    type AxiosError // Import AxiosError type
} from 'axios';
import { useAuthStore } from '@/stores/auth'; // Adjust path as needed
import type { JobDetails } from '@/stores/job'; // Adjust path as needed

// --- Define API Response Interfaces ---

// Matches backend schemas/user.py -> UserResponse
export interface UserResponse {
    email: string;
    full_name: string | null;
    is_active: boolean | null;
    is_superuser: boolean | null;
    username: string;
    id: string; // UUID as string
    created_at: string; // ISO Date string
    updated_at: string; // ISO Date string
}

// Matches backend schemas/user.py -> UserCreate (for request body)
export interface UserCreateData {
    email: string;
    full_name?: string | null;
    is_active?: boolean | null;
    is_superuser?: boolean | null;
    username: string;
    password?: string; // Password required on create
}

// Matches backend schemas/user.py -> UserUpdate (for request body)
export interface UserUpdateData {
    email?: string | null;
    full_name?: string | null;
    password?: string | null; // Optional password update
    is_active?: boolean | null;
    is_superuser?: boolean | null;
}


// Matches backend response for /token (modified to include user object)
interface AuthResponse {
    access_token: string;
    token_type: string;
    user: UserResponse; // Include the user details
}

// Matches backend response for /api/v1/upload
interface UploadResponse {
    job_id: string;
    status: string;
    message: string;
    created_at: string;
    progress: number;
    current_stage: string;
}

// Matches backend response for /api/v1/jobs/{job_id}/notify
interface NotifyResponse {
    success: boolean;
    message: string;
}

// Matches backend response for /api/v1/jobs/ (list endpoint)
// Should align with app/schemas/job.py -> JobResponse
export interface JobResponse {
    id: string;
    company_name: string;
    status: 'pending' | 'processing' | 'completed' | 'failed';
    progress: number;
    current_stage: string;
    created_at: string; // ISO Date string
    updated_at?: string | null;
    completed_at?: string | null;
    output_file_name?: string | null;
    input_file_name: string;
    created_by: string;
    error_message?: string | null;
}

// Matches backend response for /api/v1/jobs/{job_id}/stats
export interface JobStatsData {
    vendors_processed: number | null;
    unique_vendors: number | null;
    api_calls: number | null; // LLM API calls
    tokens_used: number | null; // LLM tokens
    tavily_searches: number | null; // Search API calls
    processing_time: number | null; // In seconds
    successfully_classified_l4: number | null; // Vendors reaching L4 (reference)
    successfully_classified_l5: number | null; // NEW: Vendors reaching L5
    search_assisted_l5: number | null; // NEW: Vendors reaching L5 via search
    invalid_category_errors: number | null; // Count of invalid category IDs from LLM
    // --- Deprecated/Optional ---
    // search_successful_classifications?: number | null; // Old field name, API might still return it for compatibility
}

// Structure for download result helper
interface DownloadResult {
    blob: Blob;
    filename: string;
}

// Parameters for the job history list endpoint
interface GetJobsParams {
    status?: string;
    start_date?: string; // ISO string format
    end_date?: string; // ISO string format
    skip?: number;
    limit?: number;
}

// --- Axios Instance Setup ---

const axiosInstance: AxiosInstance = axios.create({
    baseURL: '/api/v1', // Assumes Vite dev server proxies /api/v1 to your backend
    timeout: 60000, // 60 seconds timeout
    headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
    },
});

// --- Request Interceptor (Add Auth Token) ---
axiosInstance.interceptors.request.use(
    (config: InternalAxiosRequestConfig) => {
        const authStore = useAuthStore();
        const token = authStore.getToken();
        // No need for noAuthUrls here as login uses base axios
        if (token && config.url) {
            config.headers.Authorization = `Bearer ${token}`;
        }
        return config;
    },
    (error: AxiosError) => {
        console.error('Axios request interceptor error:', error);
        return Promise.reject(error);
    }
);

// --- Response Interceptor (Handle Errors) ---
axiosInstance.interceptors.response.use(
    (response) => response,
    (error: AxiosError) => {
        console.error('Axios response error:', error.config?.url, error.response?.status, error.message);
        const authStore = useAuthStore();

        if (error.response) {
            const { status, data } = error.response;

            // Handle 401 Unauthorized (except for login attempts)
            // Login uses base axios, so this interceptor won't catch its 401
            if (status === 401) {
                console.warn('Interceptor: Received 401 Unauthorized. Logging out.');
                authStore.logout(); // Trigger logout action
                // No reload here, let the component handle redirection or UI change
                return Promise.reject(new Error('Session expired. Please log in again.'));
            }

            // Extract detailed error message from response data
            let detailMessage = 'An error occurred.';
            const responseData = data as any;

            if (responseData?.detail) {
                    if (Array.isArray(responseData.detail)) {
                        detailMessage = `Validation Error: ${responseData.detail.map((err: any) => `${err.loc?.join('.') ?? 'field'}: ${err.msg}`).join('; ')}`;
                    } else if (typeof responseData.detail === 'string') {
                        detailMessage = responseData.detail;
                    } else {
                        try { detailMessage = JSON.stringify(responseData.detail); } catch { /* ignore */ }
                    }
            } else if (typeof data === 'string' && data.length > 0 && data.length < 300) {
                detailMessage = data;
            } else if (error.message) {
                detailMessage = error.message;
            }

            const errorMessage = `Error ${status}: ${detailMessage}`;
            return Promise.reject(new Error(errorMessage));

        } else if (error.request) {
            console.error('Network error or no response received:', error.request);
            return Promise.reject(new Error('Network error or server did not respond. Please check connection.'));
        } else {
            console.error('Axios setup error:', error.message);
            return Promise.reject(new Error(`Request setup error: ${error.message}`));
        }
    }
);


// --- API Service Object ---

const apiService = {
    /**
        * Logs in a user. Uses base axios for specific headers.
        */
    async login(usernameInput: string, passwordInput: string): Promise<AuthResponse> {
        const params = new URLSearchParams();
        params.append('username', usernameInput);
        params.append('password', passwordInput);
        // --- MODIFIED: Use absolute path for /token ---
        // Use base axios to avoid default JSON headers and ensure correct Content-Type
        const response = await axios.post<AuthResponse>('/token', params, {
            // baseURL: '/', // REMOVED: Let Vite proxy handle the root path
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        });
        // --- END MODIFIED ---
        return response.data;
    },

    /**
        * Uploads the vendor file.
        */
    async uploadFile(formData: FormData): Promise<UploadResponse> {
        // This uses axiosInstance, so /api/v1 prefix is added automatically
        const response = await axiosInstance.post<UploadResponse>('/upload', formData, {
                headers: { 'Content-Type': undefined } // Let browser set Content-Type for FormData
        });
        return response.data;
    },

    /**
        * Fetches the status and details of a specific job.
        */
    async getJobStatus(jobId: string): Promise<JobDetails> {
        const response = await axiosInstance.get<JobDetails>(`/jobs/${jobId}`);
        return response.data;
    },

    /**
        * Fetches statistics for a specific job.
        */
    async getJobStats(jobId: string): Promise<JobStatsData> { // Use the updated interface here
        const response = await axiosInstance.get<JobStatsData>(`/jobs/${jobId}/stats`);
        return response.data;
    },

    /**
        * Requests email notification for a job completion.
        */
    async requestNotification(jobId: string, email: string): Promise<NotifyResponse> {
        const response = await axiosInstance.post<NotifyResponse>(`/jobs/${jobId}/notify`, { email });
        return response.data;
    },

    /**
        * Downloads the results file for a completed job.
        */
    async downloadResults(jobId: string): Promise<DownloadResult> {
        const response = await axiosInstance.get(`/jobs/${jobId}/download`, {
            responseType: 'blob',
        });
        const disposition = response.headers['content-disposition'];
        let filename = `results_${jobId}.xlsx`;
        if (disposition?.includes('attachment')) {
            const filenameMatch = disposition.match(/filename\*?=(?:(?:"((?:[^"\\]|\\.)*)")|(?:([^;\n]*)))/i);
            if (filenameMatch?.[1]) { filename = filenameMatch[1].replace(/\\"/g, '"'); }
            else if (filenameMatch?.[2]) {
                    const utf8Match = filenameMatch[2].match(/^UTF-8''(.*)/i);
                    if (utf8Match?.[1]) { try { filename = decodeURIComponent(utf8Match[1]); } catch (e) { filename = utf8Match[1]; } }
                    else { filename = filenameMatch[2]; }
            }
        }
        console.log(`api.ts: Determined download filename: ${filename}`);
        return { blob: response.data as Blob, filename };
    },

    /**
        * Fetches a list of jobs for the current user, with optional filtering/pagination.
        */
    async getJobs(params: GetJobsParams = {}): Promise<JobResponse[]> {
        const cleanedParams = Object.fromEntries(
            Object.entries(params).filter(([, value]) => value !== undefined && value !== null)
        );
        const response = await axiosInstance.get<JobResponse[]>('/jobs/', { params: cleanedParams });
        return response.data;
    },

    // --- User Management API Methods ---

    /**
        * Fetches the current logged-in user's details.
        */
    async getCurrentUser(): Promise<UserResponse> {
        const response = await axiosInstance.get<UserResponse>('/users/me');
        return response.data;
    },

    /**
        * Fetches a list of all users (admin only).
        */
    async getUsers(skip: number = 0, limit: number = 100): Promise<UserResponse[]> {
        const response = await axiosInstance.get<UserResponse[]>('/users/', { params: { skip, limit } });
        return response.data;
    },

        /**
        * Fetches a specific user by ID (admin or self).
        */
        async getUserById(userId: string): Promise<UserResponse> {
        const response = await axiosInstance.get<UserResponse>(`/users/${userId}`);
        return response.data;
    },

    /**
        * Creates a new user (admin only).
        */
    async createUser(userData: UserCreateData): Promise<UserResponse> {
        const response = await axiosInstance.post<UserResponse>('/users/', userData);
        return response.data;
    },

    /**
        * Updates a user (admin or self).
        */
    async updateUser(userId: string, userData: UserUpdateData): Promise<UserResponse> {
        const response = await axiosInstance.put<UserResponse>(`/users/${userId}`, userData);
        return response.data;
    },

    /**
        * Deletes a user (admin only).
        */
    async deleteUser(userId: string): Promise<{ message: string }> {
        const response = await axiosInstance.delete<{ message: string }>(`/users/${userId}`);
        return response.data;
    },
    // --- END User Management API Methods ---
};

export default apiService;
</file>

<file path='frontend/vue_frontend/src/stores/job.ts'>
// frontend/vue_frontend/src/stores/job.ts
import { defineStore } from 'pinia';
import { ref } from 'vue';
import apiService, { type JobResponse } from '@/services/api'; // Import JobResponse type

// Define the structure of the job details object based on your API response
export interface JobDetails {
    id: string; // Changed from job_id to match JobResponse schema
    status: 'pending' | 'processing' | 'completed' | 'failed';
    progress: number;
    current_stage: string; // Consider using specific stage literals if known
    created_at: string | null;
    updated_at: string | null;
    completed_at?: string | null; // Optional completion time
    estimated_completion?: string | null; // Added optional field (backend doesn't provide this explicitly yet)
    error_message: string | null;
    // Add other fields returned by /api/v1/jobs/{job_id} if needed
    // Match JobResponse fields where applicable
    company_name?: string;
    input_file_name?: string;
    output_file_name?: string | null;
    created_by?: string;
}

export const useJobStore = defineStore('job', () => {
    // --- State ---
    const currentJobId = ref<string | null>(null);
    const jobDetails = ref<JobDetails | null>(null);
    const isLoading = ref(false); // For tracking polling/loading state for CURRENT job
    const error = ref<string | null>(null); // For storing errors related to fetching CURRENT job status

    // --- ADDED: Job History State ---
    const jobHistory = ref<JobResponse[]>([]);
    const historyLoading = ref(false);
    const historyError = ref<string | null>(null);
    // --- END ADDED ---

    // --- Actions ---
    function setCurrentJobId(jobId: string | null): void {
        console.log(`JobStore: Setting currentJobId from '${currentJobId.value}' to '${jobId}'`); // LOGGING
        if (currentJobId.value !== jobId) {
            currentJobId.value = jobId;
            // Clear details when ID changes (to null or a new ID) to force refresh
            jobDetails.value = null;
            console.log(`JobStore: Cleared jobDetails due to ID change.`); // LOGGING
            error.value = null; // Clear errors
            isLoading.value = false; // Reset loading state

            // Update URL to reflect the current job ID or clear it
            try {
                 const url = new URL(window.location.href);
                 if (jobId) {
                     url.searchParams.set('job_id', jobId);
                     console.log(`JobStore: Updated URL searchParam 'job_id' to ${jobId}`); // LOGGING
                 } else {
                     url.searchParams.delete('job_id');
                     console.log(`JobStore: Removed 'job_id' from URL searchParams.`); // LOGGING
                 }
                 // Use replaceState to avoid polluting history
                 window.history.replaceState({}, '', url.toString());
            } catch (e) {
                 console.error("JobStore: Failed to update URL:", e);
            }
        }
         // If the same job ID is set again, force a refresh of details
         else if (jobId !== null) {
             console.log(`JobStore: Re-setting same job ID ${jobId}, clearing details to force refresh.`); // LOGGING
             jobDetails.value = null;
             error.value = null;
             isLoading.value = false;
         }
    }

    function updateJobDetails(details: JobDetails): void {
        // Only update if the details are for the currently tracked job
        if (details && details.id === currentJobId.value) { // Match 'id' field from JobResponse/JobDetails
            console.log(`JobStore: Updating jobDetails for ${currentJobId.value} with status ${details.status}, progress ${details.progress}`); // LOGGING
            jobDetails.value = { ...details }; // Create new object for reactivity
            error.value = null; // Clear error on successful update
        } else if (details) {
            console.warn(`JobStore: Received details for job ${details.id}, but currently tracking ${currentJobId.value}. Ignoring update.`); // LOGGING
        } else {
            console.warn(`JobStore: updateJobDetails called with invalid details object.`); // LOGGING
        }
    }

    function setLoading(loading: boolean): void {
        isLoading.value = loading;
    }

    function setError(errorMessage: string | null): void {
        error.value = errorMessage;
    }

    function clearJob(): void {
        console.log('JobStore: Clearing job state.'); // LOGGING
        setCurrentJobId(null); // This also clears details, error, loading and URL param
        // --- ADDED: Clear history too on full clear? Optional. ---
        // jobHistory.value = [];
        // historyLoading.value = false;
        // historyError.value = null;
        // --- END ADDED ---
    }

    // --- ADDED: Job History Actions ---
    async function fetchJobHistory(params = {}): Promise<void> {
        console.log('JobStore: Fetching job history with params:', params); // LOGGING
        historyLoading.value = true;
        historyError.value = null;
        try {
            const jobs = await apiService.getJobs(params);
            jobHistory.value = jobs;
            console.log(`JobStore: Fetched ${jobs.length} jobs.`); // LOGGING
        } catch (err: any) {
            console.error('JobStore: Failed to fetch job history:', err); // LOGGING
            historyError.value = err.message || 'Failed to load job history.';
            jobHistory.value = []; // Clear history on error
        } finally {
            historyLoading.value = false;
        }
    }
    // --- END ADDED ---


    return {
        currentJobId,
        jobDetails,
        isLoading,
        error,
        // History state & actions
        jobHistory,
        historyLoading,
        historyError,
        fetchJobHistory,
        // Existing actions
        setCurrentJobId,
        updateJobDetails,
        setLoading,
        setError,
        clearJob,
    };
});

</file>

</Concatenated Source Code>